<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>maoqitian</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.maoqitian.com/"/>
  <updated>2019-01-18T16:17:06.199Z</updated>
  <id>https://www.maoqitian.com/</id>
  
  <author>
    <name>maoqitian</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android运行时权限机制解析</title>
    <link href="https://www.maoqitian.com/2019/01/19/Android%E8%BF%90%E8%A1%8C%E6%97%B6%E6%9D%83%E9%99%90%E6%9C%BA%E5%88%B6%E8%A7%A3%E6%9E%90/"/>
    <id>https://www.maoqitian.com/2019/01/19/Android运行时权限机制解析/</id>
    <published>2019-01-18T16:14:42.000Z</published>
    <updated>2019-01-18T16:17:06.199Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>从Android M（6.0 API级别23）开始，用户开始在应用运行时向其授予权限，而不是在应用安装时授予。此方法可以简化应用安装过程，因为用户在安装或更新应用时不需要授予权限。<br><a id="more"></a></p></blockquote><h3 id="权限介绍"><a href="#权限介绍" class="headerlink" title="权限介绍"></a>权限介绍</h3><ul><li>权限机制的目的是保护用户的隐私，Android应用程序必须请求访问敏感用户数据（如联系人和短信）以及某些系统特性（如照相机和互联网）的许可。根据该特征，系统可以自动授予许可，或者提示用户批准请求。</li><li>如果设备运行的是 Android 6.0 或更高版本，或者应用的目标 SDK 为 23 或更高：应用必须在清单文件中中列出权限，并且它必须在运行时请求其需要的每项危险权限。用户可以授予或拒绝每项权限，且即使用户拒绝权限请求，应用仍可以继续运行有限的功能。</li></ul><h3 id="权限类别"><a href="#权限类别" class="headerlink" title="权限类别"></a>权限类别</h3><h4 id="正常权限"><a href="#正常权限" class="headerlink" title="正常权限"></a>正常权限</h4><ul><li>正常权限不会给用户的隐私带来风险，如果你在清单文件（AndroidManifest.xml）中加入了正常权限声明，则安卓系统会自动授予App应用该权限，如下列出了正常权限</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.ACCESS_LOCATION_EXTRA_COMMANDS</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.ACCESS_NETWORK_STATE</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.ACCESS_NOTIFICATION_POLICY</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.ACCESS_WIFI_STATE</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.ACCESS_WIMAX_STATE</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.BLUETOOTH</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.BLUETOOTH_ADMIN</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.BROADCAST_STICKY</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.CHANGE_NETWORK_STATE</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.CHANGE_WIFI_MULTICAST_STATE</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.CHANGE_WIFI_STATE</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.CHANGE_WIMAX_STATE</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.DISABLE_KEYGUARD</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.EXPAND_STATUS_BAR</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.FLASHLIGHT</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.GET_ACCOUNTS</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.GET_PACKAGE_SIZE</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.INTERNET</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.KILL_BACKGROUND_PROCESSES</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.MODIFY_AUDIO_SETTINGS</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.NFC</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.READ_SYNC_SETTINGS</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.READ_SYNC_STATS</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.RECEIVE_BOOT_COMPLETED</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.REORDER_TASKS</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.REQUEST_INSTALL_PACKAGES</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.SET_TIME_ZONE</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.SET_WALLPAPER</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.SET_WALLPAPER_HINTS</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.SUBSCRIBED_FEEDS_READ</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.TRANSMIT_IR</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.USE_FINGERPRINT</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.VIBRATE</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.WAKE_LOCK</span></span><br><span class="line">android<span class="selector-class">.permission</span><span class="selector-class">.WRITE_SYNC_SETTINGS</span></span><br><span class="line">com<span class="selector-class">.android</span><span class="selector-class">.alarm</span><span class="selector-class">.permission</span><span class="selector-class">.SET_ALARM</span></span><br><span class="line">com<span class="selector-class">.android</span><span class="selector-class">.launcher</span><span class="selector-class">.permission</span><span class="selector-class">.INSTALL_SHORTCUT</span></span><br><span class="line">com<span class="selector-class">.android</span><span class="selector-class">.launcher</span><span class="selector-class">.permission</span><span class="selector-class">.UNINSTALL_SHORTCUT</span></span><br></pre></td></tr></table></figure><h4 id="危险权限"><a href="#危险权限" class="headerlink" title="危险权限"></a>危险权限</h4><ul><li>查看危险权限</li></ul><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以通过adb <span class="keyword">shell</span><span class="bash"> pm list permissions -d -g进行查看(Windows使用adb 命令首先需要自行配置环境变量)</span></span><br></pre></td></tr></table></figure><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Android%20%E8%BF%90%E8%A1%8C%E6%97%B6%E6%9D%83%E9%99%90/adb%20%E6%9F%A5%E7%9C%8B%E5%8D%B1%E9%99%A9%E6%9D%83%E9%99%90.png" alt="adb查看危险权限"></p><pre><code>- 危险权限会授予应用访问用户隐私数据的权限。如果您的应用在清单中列出了正常权限，系统将自动授予该权限。如果您列出了危险权限，则用户在清单文件中列出的同时还必须在触发使用相应功能的时候让用户同意应用使用这些权限![危险权限列表](https://github.com/maoqitian/MaoMdPhoto/raw/master/Android%20%E8%BF%90%E8%A1%8C%E6%97%B6%E6%9D%83%E9%99%90/%E5%8D%B1%E9%99%A9%E6%9D%83%E9%99%90.png)</code></pre><ul><li>由危险权限的表可以看出，危险权限都是一组一组出现的，并且你只要授予一组权限的其中一个，那么该组危险权限的其他权限也同样被授予了（例如，如果某应用已经请求并且被授予了READ_CONTACTS 权限，然后它又请求WRITE_CONTACTS，系统将立即授予该权限）<h4 id="使用权限"><a href="#使用权限" class="headerlink" title="使用权限"></a>使用权限</h4></li><li>当我们新建一个Android应用的时候，默认应用是没有有申请任何权限的，我们不管需要什么权限，首先需在清单文件中使用<uses-permission>标签声明<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">package</span>=<span class="string">"com.android.app.myapp"</span> &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.RECEIVE_SMS"</span> /&gt;</span></span><br><span class="line">  ...</span><br><span class="line"> <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></uses-permission></li></ul><h3 id="权限相关API"><a href="#权限相关API" class="headerlink" title="权限相关API"></a>权限相关API</h3><h4 id="检查权限"><a href="#检查权限" class="headerlink" title="检查权限"></a>检查权限</h4><ul><li>当我们应用需要危险的权限的时候，每次执行操作都需要检查是否授予了危险权限，检查是否具有该权限我们使用ContextCompat.checkSelfPermission() 方法<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> permissionCheck = ContextCompat.checkSelfPermission(thisActivity,</span><br><span class="line">     Manifest.permission.WRITE_CALENDAR);</span><br><span class="line">     </span><br><span class="line"><span class="comment">//如果具有该权限，则方法返回PackageManager.PERMISSION_GRANTED，并且应用可以</span></span><br><span class="line"><span class="comment">//继续操作。如果应用不具有此权限，方法将返回 PERMISSION_DENIED，且应用必须明确向用户要求权限</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="请求获取权限"><a href="#请求获取权限" class="headerlink" title="请求获取权限"></a>请求获取权限</h4><ul><li>当我们应用某个功能操作需要危险权限的申请，则我们可以调用ActivityCompat.requestPermissions的方法来获取相应的权限。该方法异步运行：它会立即返回，并且在用户响应对话框之后，系统会使用结果调用应用的回调方法，将应用传递的相同请求代码传递到ActivityCompat.requestPermissions方法。</li><li>以下代码可以检查应用是否具备读取用户联系人的权限，并根据需要请求该权限<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (ContextCompat.checkSelfPermission(thisActivity,</span><br><span class="line">              Manifest.permission.READ_CONTACTS)</span><br><span class="line">      != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">  <span class="comment">//是否具有该读取联系人权限</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (ActivityCompat.shouldShowRequestPermissionRationale(thisActivity,</span><br><span class="line">          Manifest.permission.READ_CONTACTS)) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//判断是否需要向用户解释，为什么需要这些权限。有时候用户会不理解应用程序为什么需要这些权限。</span></span><br><span class="line">      <span class="comment">//这个方法只有在APP请求过某一权限且用户禁止APP使用该权限的时候返回true。在用户授权了权限和禁止权限时勾选了“Don't ask again”选项的情况下都会返回false</span></span><br><span class="line">      <span class="comment">//也就是说如果进入到这里，就说明该权限曾经被拒绝过</span></span><br><span class="line">      </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">      被拒绝又想再次申请可跳转应用信息界面授予权限</span></span><br><span class="line"><span class="comment">      Intent intent = new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);</span></span><br><span class="line"><span class="comment">      intent.setData(Uri.fromParts("package", context.getPackageName(), null));</span></span><br><span class="line"><span class="comment">      startActivity(intent);</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//申请权限</span></span><br><span class="line"></span><br><span class="line">      ActivityCompat.requestPermissions(thisActivity,</span><br><span class="line">              <span class="keyword">new</span> String[]&#123;Manifest.permission.READ_CONTACTS&#125;,</span><br><span class="line">              MY_PERMISSIONS_REQUEST_READ_CONTACTS);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// MY_PERMISSIONS_REQUEST_READ_CONTACTS is an</span></span><br><span class="line">      <span class="comment">// app-defined int constant. The callback method gets the</span></span><br><span class="line">      <span class="comment">// result of the request.</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="处理权限请求的响应"><a href="#处理权限请求的响应" class="headerlink" title="处理权限请求的响应"></a>处理权限请求的响应</h4><ul><li>当权限申请提示框与用户交互的时候，我们开发人员必须知道用户到底是否同意应用的权限申请。所以用户响应时，Android系统将调用应用的 onRequestPermissionsResult() 方法，向其传递用户响应 </li><li>延续上面读取联系人的例子</li></ul><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> requestCode 申请权限传入的请求码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> permissions 申请权限的数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> grantResults 请求的结果（用于区分上一个参数permissions中的权限有没有被授予，permissions和grantResults两个数组大小是一样的，具体值和上方提到的PackageManager中的两个常量做比较）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> onRequestPermissionsResult(<span class="keyword">int</span> requestCode,</span><br><span class="line">    String permissions[], <span class="keyword">int</span>[] grantResults) &#123;</span><br><span class="line"> <span class="keyword">switch</span> (requestCode) &#123;</span><br><span class="line">    <span class="keyword">case</span> MY_PERMISSIONS_REQUEST_READ_CONTACTS: &#123;</span><br><span class="line">        <span class="comment">// If request is cancelled, the result arrays are empty.</span></span><br><span class="line">        <span class="keyword">if</span> (grantResults.length &gt; <span class="number">0</span></span><br><span class="line">            &amp;&amp; grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// permission was granted, yay! Do the</span></span><br><span class="line">            <span class="comment">// contacts-related task you need to do.</span></span><br><span class="line">            <span class="comment">//用户同意权限申请，继续应用操作</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// permission denied, boo! Disable the</span></span><br><span class="line">            <span class="comment">// functionality that depends on this permission.</span></span><br><span class="line">            <span class="comment">//用户拒绝权限申请，提示用户应用的操作需要该权限</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// other 'case' lines to check for other</span></span><br><span class="line">    <span class="comment">// permissions this app might request</span></span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="运行时权限小例子"><a href="#运行时权限小例子" class="headerlink" title="运行时权限小例子"></a>运行时权限小例子</h4><ul><li>读取联系人列表完整例子<figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">public</span> class MainActivity extends AppCompatActivity &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> MY_PERMISSIONS_REQUEST_READ_CONTACTS = <span class="number">1</span>;</span><br><span class="line">     <span class="comment">//保存联系人</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;<span class="keyword">String</span>&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    readContacts();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//读取联系人</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> readContacts()&#123;</span><br><span class="line">    <span class="keyword">if</span>(ContextCompat.checkSelfPermission(<span class="keyword">this</span>, Manifest.permission.READ_CONTACTS)</span><br><span class="line">            != PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">      <span class="comment">//申请权限</span></span><br><span class="line">        <span class="comment">//申请权限</span></span><br><span class="line">        <span class="keyword">if</span> (ActivityCompat.shouldShowRequestPermissionRationale(<span class="keyword">this</span>,</span><br><span class="line">                Manifest.permission.READ_CONTACTS)) &#123;</span><br><span class="line">            <span class="comment">//之前申请权限的时候拒绝过 ，向用户解释为什么需要该权限</span></span><br><span class="line">            Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"Permission Denied，Show an expanation to the user *asynchronously* -- don't block"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            ActivityCompat.requestPermissions(<span class="keyword">this</span>,</span><br><span class="line">                    <span class="keyword">new</span> <span class="keyword">String</span>[]&#123;Manifest.permission.READ_CONTACTS&#125;,</span><br><span class="line">                    MY_PERMISSIONS_REQUEST_READ_CONTACTS);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//获取联系人列表</span></span><br><span class="line">        list=readContact();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> onRequestPermissionsResult(<span class="built_in">int</span> requestCode, @NonNull <span class="keyword">String</span>[] permissions, @NonNull <span class="built_in">int</span>[] grantResults) &#123;</span><br><span class="line">    <span class="keyword">if</span>(requestCode == MY_PERMISSIONS_REQUEST_READ_CONTACTS)&#123;</span><br><span class="line">        <span class="keyword">if</span> (grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//获取联系人列表</span></span><br><span class="line">            list=readContact();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Permission Denied</span></span><br><span class="line">            Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"Permission Denied"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//读取联系人</span></span><br><span class="line">   <span class="keyword">public</span> List&lt;<span class="keyword">String</span>&gt; readContact()&#123;</span><br><span class="line">    List&lt;<span class="keyword">String</span>&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    Cursor <span class="built_in">cursor</span> = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//cursor指针 query询问 contract协议 kinds种类</span></span><br><span class="line">        <span class="built_in">cursor</span> = getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">cursor</span> != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="built_in">cursor</span>.moveToNext()) &#123;</span><br><span class="line">                <span class="keyword">String</span> displayName = <span class="built_in">cursor</span>.getString(<span class="built_in">cursor</span>.getColumnIndex(ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME));</span><br><span class="line">                <span class="keyword">String</span> number = <span class="built_in">cursor</span>.getString(<span class="built_in">cursor</span>.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));</span><br><span class="line">                list.<span class="built_in">add</span>(displayName + <span class="string">'\n'</span> + number);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">cursor</span> != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="built_in">cursor</span>.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//清单文件中别忘了加上 </span></span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.READ_CONTACTS"</span>/&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="热门框架了解"><a href="#热门框架了解" class="headerlink" title="热门框架了解"></a>热门框架了解</h3><ul><li>AndPermission（严振杰大大的框架）</li><li>项目地址<br>  <a href="https://github.com/yanzhenjie/AndPermission" target="_blank" rel="noopener">https://github.com/yanzhenjie/AndPermission</a></li><li><p>该框架也是日常开发用得比较多的一个框架，该框架一句话搞定权限申请，还是比较方便的</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">AndPermission.<span class="keyword">with</span>(this).runtime()</span><br><span class="line">            .permission(Permission.<span class="keyword">Group</span>.STORAGE)</span><br><span class="line">            .onGranted(<span class="literal">new</span> Action&lt;<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;&gt;() &#123;</span><br><span class="line">                @Override</span><br><span class="line">                <span class="keyword">public</span> <span class="literal">void</span> onAction(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; <span class="built_in">data</span>) &#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).onDenied(<span class="literal">new</span> Action&lt;<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;&gt;() &#123;</span><br><span class="line">        @Override</span><br><span class="line">        <span class="keyword">public</span> <span class="literal">void</span> onAction(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; <span class="built_in">data</span>) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).start();</span><br></pre></td></tr></table></figure></li><li><p>通过阅读框架源码，可以看到这个框架的核心就是PermissionActivity,它是一个没有界面的Activity,所有的权限申请都由它来发起，并进行相应操作的回调，结合前面了解的运行时权限的知识，相信这个Activity你可以很轻易就了解。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * Request permission.</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     * Created by Yan Zhenjie on 2017/4/27.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">PermissionActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_INPUT_OPERATION = <span class="string">"KEY_INPUT_OPERATION"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> VALUE_INPUT_PERMISSION = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> VALUE_INPUT_PERMISSION_SETTING = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> VALUE_INPUT_INSTALL = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> VALUE_INPUT_OVERLAY = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> VALUE_INPUT_ALERT_WINDOW = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_INPUT_PERMISSIONS = <span class="string">"KEY_INPUT_PERMISSIONS"</span>;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">static</span> RequestListener sRequestListener;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * Request for permissions.</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">requestPermission</span><span class="params">(Context context, String[] permissions, RequestListener requestListener)</span> </span>&#123;</span><br><span class="line">     PermissionActivity.sRequestListener = requestListener;</span><br><span class="line"></span><br><span class="line">     Intent intent = <span class="keyword">new</span> Intent(context, PermissionActivity.class);</span><br><span class="line">     intent.putExtra(KEY_INPUT_OPERATION, VALUE_INPUT_PERMISSION);</span><br><span class="line">     intent.putExtra(KEY_INPUT_PERMISSIONS, permissions);</span><br><span class="line">     intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">     context.startActivity(intent);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * Request for setting.</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">permissionSetting</span><span class="params">(Context context, RequestListener requestListener)</span> </span>&#123;</span><br><span class="line">     PermissionActivity.sRequestListener = requestListener;</span><br><span class="line"></span><br><span class="line">     Intent intent = <span class="keyword">new</span> Intent(context, PermissionActivity.class);</span><br><span class="line">     intent.putExtra(KEY_INPUT_OPERATION, VALUE_INPUT_PERMISSION_SETTING);</span><br><span class="line">     intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">     context.startActivity(intent);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * Request for package install.</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">requestInstall</span><span class="params">(Context context, RequestListener requestListener)</span>  </span>&#123;</span><br><span class="line">     PermissionActivity.sRequestListener = requestListener;</span><br><span class="line"></span><br><span class="line">     Intent intent = <span class="keyword">new</span> Intent(context, PermissionActivity.class);</span><br><span class="line">     intent.putExtra(KEY_INPUT_OPERATION, VALUE_INPUT_INSTALL);</span><br><span class="line">     intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">     context.startActivity(intent);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * Request for overlay.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">requestOverlay</span><span class="params">(Context context, RequestListener requestListener)</span> </span>&#123;</span><br><span class="line">     PermissionActivity.sRequestListener = requestListener;</span><br><span class="line"></span><br><span class="line">     Intent intent = <span class="keyword">new</span> Intent(context, PermissionActivity.class);</span><br><span class="line">     intent.putExtra(KEY_INPUT_OPERATION, VALUE_INPUT_OVERLAY);</span><br><span class="line">     intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">     context.startActivity(intent);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Request for alert window.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">requestAlertWindow</span><span class="params">(Context context, RequestListener requestListener)</span> </span>&#123;</span><br><span class="line">     PermissionActivity.sRequestListener = requestListener;</span><br><span class="line"></span><br><span class="line">     Intent intent = <span class="keyword">new</span> Intent(context, PermissionActivity.class);</span><br><span class="line">     intent.putExtra(KEY_INPUT_OPERATION, VALUE_INPUT_ALERT_WINDOW);</span><br><span class="line">     intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">     context.startActivity(intent);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">     <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">     Intent intent = getIntent();</span><br><span class="line">     <span class="keyword">int</span> operation = intent.getIntExtra(KEY_INPUT_OPERATION, <span class="number">0</span>);</span><br><span class="line">     <span class="keyword">switch</span> (operation) &#123;</span><br><span class="line">         <span class="keyword">case</span> VALUE_INPUT_PERMISSION: &#123;</span><br><span class="line">             String[] permissions = intent.getStringArrayExtra(KEY_INPUT_PERMISSIONS);</span><br><span class="line">             <span class="keyword">if</span> (permissions != <span class="keyword">null</span> &amp;&amp; sRequestListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                 requestPermissions(permissions, VALUE_INPUT_PERMISSION);</span><br><span class="line">             &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                 finish();</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">case</span> VALUE_INPUT_PERMISSION_SETTING: &#123;</span><br><span class="line">             <span class="keyword">if</span> (sRequestListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                 RuntimeSettingPage setting = <span class="keyword">new</span> RuntimeSettingPage(<span class="keyword">new</span> ContextSource(<span class="keyword">this</span>));</span><br><span class="line">                 setting.start(VALUE_INPUT_PERMISSION_SETTING);</span><br><span class="line">             &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                 finish();</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">case</span> VALUE_INPUT_INSTALL: &#123;</span><br><span class="line">             <span class="keyword">if</span> (sRequestListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                 Intent manageIntent = <span class="keyword">new</span> Intent(Settings.ACTION_MANAGE_UNKNOWN_APP_SOURCES);</span><br><span class="line">                 manageIntent.setData(Uri.fromParts(<span class="string">"package"</span>, getPackageName(), <span class="keyword">null</span>));</span><br><span class="line">                 startActivityForResult(manageIntent, VALUE_INPUT_INSTALL);</span><br><span class="line">             &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                 finish();</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">case</span> VALUE_INPUT_OVERLAY: &#123;</span><br><span class="line">             <span class="keyword">if</span> (sRequestListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                 OverlaySettingPage settingPage = <span class="keyword">new</span> OverlaySettingPage(<span class="keyword">new</span> ContextSource(<span class="keyword">this</span>));</span><br><span class="line">                 settingPage.start(VALUE_INPUT_OVERLAY);</span><br><span class="line">             &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                 finish();</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">case</span> VALUE_INPUT_ALERT_WINDOW: &#123;</span><br><span class="line">             <span class="keyword">if</span> (sRequestListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">                 AlertWindowSettingPage settingPage = <span class="keyword">new</span> AlertWindowSettingPage(<span class="keyword">new</span> ContextSource(<span class="keyword">this</span>));</span><br><span class="line">                 settingPage.start(VALUE_INPUT_ALERT_WINDOW);</span><br><span class="line">             &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                 finish();</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">default</span>: &#123;</span><br><span class="line">             <span class="keyword">throw</span> <span class="keyword">new</span> AssertionError(<span class="string">"This should not be the case."</span>);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, String[] permissions, <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (sRequestListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">         sRequestListener.onRequestCallback();</span><br><span class="line">     &#125;</span><br><span class="line">     finish();</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (sRequestListener != <span class="keyword">null</span>) &#123;</span><br><span class="line">         sRequestListener.onRequestCallback();</span><br><span class="line">     &#125;</span><br><span class="line">     finish();</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onKeyDown</span><span class="params">(<span class="keyword">int</span> keyCode, KeyEvent event)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_BACK) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">super</span>.onKeyDown(keyCode, event);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">finish</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     sRequestListener = <span class="keyword">null</span>;</span><br><span class="line">     <span class="keyword">super</span>.finish();</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * permission callback.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RequestListener</span> </span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">void</span> <span class="title">onRequestCallback</span><span class="params">()</span></span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="最后说点"><a href="#最后说点" class="headerlink" title="最后说点"></a>最后说点</h3><ul><li>看过不一定记得，记得不一定会写，会写不代表不会忘记，所以记下来是最好的选择。好了，又通过一篇文章让我对Android运行时权限有了更深入的了解。文章中如果有错误，请大家给我提出来，大家一起学习进步，如果觉得我的文章给予你帮助，也请给我一个喜欢和关注。</li><li><p>参考链接:</p><ul><li>《Android进阶之光》</li><li><p><a href="https://developer.android.google.cn/training/permissions/requesting#handle-response" target="_blank" rel="noopener">在运行时请求权限</a></p></li><li><p><a href="https://developer.android.google.cn/guide/topics/security/permissions#permissions" target="_blank" rel="noopener">系统权限</a></p></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;从Android M（6.0 API级别23）开始，用户开始在应用运行时向其授予权限，而不是在应用安装时授予。此方法可以简化应用安装过程，因为用户在安装或更新应用时不需要授予权限。&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android基础回顾" scheme="https://www.maoqitian.com/categories/Android%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE/"/>
    
    
      <category term="Android" scheme="https://www.maoqitian.com/tags/Android/"/>
    
      <category term="Android运行时权限" scheme="https://www.maoqitian.com/tags/Android%E8%BF%90%E8%A1%8C%E6%97%B6%E6%9D%83%E9%99%90/"/>
    
      <category term="permission" scheme="https://www.maoqitian.com/tags/permission/"/>
    
  </entry>
  
  <entry>
    <title>Java接口和抽象类是什么，有什么区别</title>
    <link href="https://www.maoqitian.com/2019/01/16/%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB/"/>
    <id>https://www.maoqitian.com/2019/01/16/接口和抽象类/</id>
    <published>2019-01-16T15:24:01.000Z</published>
    <updated>2019-01-16T15:33:49.483Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>抽象(abstract)和接口(interface)在Java中都是关键字，也就说明他们足够重要，而抽象类和接口为我们面向对象编程提供了非常大的帮助。下面我们就一起来回顾这基础知识。<br><a id="more"></a></p></blockquote><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><ul><li>在构建某些未实现方法的类时，你可能会第一个想到接口，但是抽象类也是实现这个目的一种重要而必要的工具。</li><li>创建抽象类需要用到abstract关键字来修饰类，我们希望通过这个通用的类操作一系类方法，如果没有具体的内容，这个抽象类的意义只有一个，就是不让其他类实例化这个抽象类的对象，只能实例化它的子类对象；要达到操控，Java给我们提供了抽象方法的机制，抽象方法也是使用abstract关键字来修饰，<strong>包含抽象方法的类就叫做抽象类</strong><h3 id="抽象类特点"><a href="#抽象类特点" class="headerlink" title="抽象类特点"></a>抽象类特点</h3><ul><li>1.抽象类和抽象方法必须用abstract关键字修饰</li><li>2.抽象类不一定有抽象方法，有抽象方法的类一定是抽象类或者接口</li><li>3.抽象类不能实例化，也就是说不能new出来，抽象类必须由子类实例化，这其实也就是多态的一种，抽象类多态（<strong>为什么抽象类不能实例化？</strong> 如果抽象类实例化，实例化的抽象类对象意思就可以调用抽象类的抽象方法，但是抽象方法是没有具体实现的，也就没有任何意义，所以抽象类不能实例化）</li><li>4.抽象类的子类要么是抽象类(实例中的Car类)，要么就重写抽象类中的抽象方法（实例中的Jetta类）</li><li>5.一个类只能继承一个抽象类，抽象类也可以继承抽象类（实例中的SuperCar 类）<h3 id="抽象类成员特点："><a href="#抽象类成员特点：" class="headerlink" title="抽象类成员特点："></a>抽象类成员特点：</h3></li><li>1.成员既可以是常量也可以是变量，但是abstract不能修饰成员变量，变量的值是不固定的，无法抽象</li><li>2.抽象类也有构造方法，他的意义在于子类可以访问父类的初始化数据（实例中Jetta构造方法 super()调用了抽象父类构造方法）</li><li>3.成员方法既可以抽象的，也可以是非抽象的，抽象方法一般是强制要求子类去实现的方法，非抽象方法一般是重复的代码，可以提高代码复用性</li><li>4.abstract关键字不能与static关键字（原理和抽象类不能实例化其实是一个道理，<strong>staticx修饰的抽象方法不需要实例化可以直接调用，这显然是没有意义的</strong>）、final关键字(<strong>final修饰的方法子类不能重写，abstract修饰的方法子类强制重写</strong>)、private关键同时出现（<strong>private修饰的方法子类不能访问</strong>）</li></ul></li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: mao.qitian</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2018/8/11 0011 16:25</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 汽车抽象类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Car</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"抽象类的构造方法被调用"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">driver</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"所有汽车都能驾驶"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//汽车的速度</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">speed</span><span class="params">()</span></span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: mao.qitian@gxxmt.com</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2018/8/11 0011 16:29</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 捷达</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Jetta</span> <span class="keyword">extends</span> <span class="title">Car</span></span>&#123;</span><br><span class="line"> </span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="title">Jetta</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>();</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">speed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"开完兰博基尼再开捷达速度上无法适应"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: mao.qitian</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2018/8/11 0011 22:39</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 超跑</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">SuperCar</span> <span class="keyword">extends</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line"><span class="comment">//超跑的价格</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">expensive</span> <span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: mao.qitian</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2018/8/11 0011 16:27</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 兰博基尼</span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Lamborghini</span> <span class="keyword">extends</span> <span class="title">SuperCar</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">speed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"兰博基尼速度两秒破百"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">expensive</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="接口（interface）"><a href="#接口（interface）" class="headerlink" title="接口（interface）"></a>接口（interface）</h2><ul><li>接口使抽象的更向前迈进了一步，interface关键字修饰方法产生的是完全抽象的类，它允许创建者定义方法名，传参和返回类型，但是它没有任何方法体，只提供了形式（规则），而未提供任何具体实现。<h3 id="接口的特点"><a href="#接口的特点" class="headerlink" title="接口的特点"></a>接口的特点</h3></li><li>1.接口使用interface关键字代替class修饰类，</li><li>2.类实现接口用implement表示</li><li>3.和抽象类一样，接口也不能实例化，只能由实现了接口的类来进行实例化</li><li>4.接口的子类可以是抽象类，也可以是具体类，具体类要重写接口的抽象方法</li></ul><h3 id="接口成员特点"><a href="#接口成员特点" class="headerlink" title="接口成员特点"></a>接口成员特点</h3><ul><li>1.接口中定义的变量都是常量，默认修饰符为 public static final</li><li><p>2.接口没有构造方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: mao.qitian</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2018/8/12 0012 0:22</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">b</span><span class="params">()</span></span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">implements</span> <span class="title">A</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">C</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">super</span>();<span class="comment">//调用的是Objetc类的构造方法，方法默认继承Objetc类</span></span><br><span class="line">  &#125;</span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">b</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li><li><p>3.接口中的成员方法只能是抽象方法，默认修饰符为 public abstract</p></li><li>4.接口中的所以成员方法和变量都是公共的（public）</li></ul><h3 id="接口的应用"><a href="#接口的应用" class="headerlink" title="接口的应用"></a>接口的应用</h3><ul><li>策略模式：<strong>定义一系列算法，把每一个算法封装起来，并且使他们可以相互替换。策略模式使得算法可独立于使用它的客户端而独立变化</strong>。<h4 id="三个角色"><a href="#三个角色" class="headerlink" title="三个角色"></a>三个角色</h4></li><li>上下文角色（Context）:操作我们制定策略的上下文环境，使用策略的通用调用</li><li>抽象策略角色（Stragety）:策略，算法的抽象，通常是一个接口</li><li>策略的实现角色（ConcreteStragety）：实现抽象的策略接口，具体实现这个策略<h4 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h4><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">    实现学校教师的奖金发放，教师有属性：编号、姓名，教学总工作量，奖金</span><br><span class="line">    奖金的计算方法为：</span><br><span class="line">                    x*<span class="number">30</span>   (当职称为教授时)</span><br><span class="line">           y=       x*<span class="number">25</span>   (当职称为副教授时)</span><br><span class="line">                    x*<span class="number">20</span>    (当职称为讲师时)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">Function</span> &#123;                             </span><br><span class="line"> <span class="comment">//接口定义抽象方法 （Stragety）</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">Money</span>(<span class="params"><span class="keyword">double</span> x</span>)</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">A</span> <span class="title">implements</span> <span class="title">Function</span>  &#123;</span><br><span class="line">      <span class="comment">//教授奖金计算</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">Money</span>(<span class="params"><span class="keyword">double</span> x</span>)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> x*<span class="number">30</span>;</span><br><span class="line">   </span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">B</span> <span class="title">implements</span> <span class="title">Function</span> &#123;</span><br><span class="line">     <span class="comment">//副教授奖金计算</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">Money</span>(<span class="params"><span class="keyword">double</span> x</span>)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> x*<span class="number">25</span>;</span><br><span class="line">   &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">C</span> <span class="title">implements</span> <span class="title">Function</span> &#123;</span><br><span class="line">      <span class="comment">//讲师奖金计算</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">Money</span>(<span class="params"><span class="keyword">double</span> x</span>)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> x*<span class="number">20</span>;</span><br><span class="line">   &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">myMoney</span> &#123;</span><br><span class="line">  <span class="comment">//上下文角色</span></span><br><span class="line">  Function s;</span><br><span class="line">  <span class="keyword">double</span> M;<span class="comment">//工时</span></span><br><span class="line">     String name;<span class="comment">//教师姓名</span></span><br><span class="line">     String type;<span class="comment">//教师职称</span></span><br><span class="line">     <span class="keyword">int</span> number;<span class="comment">//教师编号</span></span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">S</span>(<span class="params"><span class="keyword">double</span> X,String N,<span class="keyword">int</span> Num,String Type</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.M=X;</span><br><span class="line">  <span class="keyword">this</span>.name=N;</span><br><span class="line">  <span class="keyword">this</span>.number=Num;</span><br><span class="line">  <span class="keyword">this</span>.type=Type;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">//奖金计算方式</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getMoney</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(type.<span class="keyword">equals</span>(<span class="string">"教授"</span>)) s=<span class="keyword">new</span> A();</span><br><span class="line">  <span class="keyword">if</span>(type.<span class="keyword">equals</span>(<span class="string">"副教授"</span>)) s=<span class="keyword">new</span> B();</span><br><span class="line">  <span class="keyword">if</span>(type.<span class="keyword">equals</span>(<span class="string">"讲师"</span>)) s=<span class="keyword">new</span> C();</span><br><span class="line">  <span class="keyword">return</span> s.Money(M);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">  myMoney f=<span class="keyword">new</span> myMoney();</span><br><span class="line">     Scanner sc=<span class="keyword">new</span> Scanner(System.<span class="keyword">in</span>);</span><br><span class="line">     System.<span class="keyword">out</span>.println(<span class="string">"请输入职位:"</span>);</span><br><span class="line">     String Type=sc.next();</span><br><span class="line">     System.<span class="keyword">out</span>.println(<span class="string">"请输入姓名:"</span>);</span><br><span class="line">     String N=sc.next();</span><br><span class="line">     System.<span class="keyword">out</span>.println(<span class="string">"请输入编号:"</span>);</span><br><span class="line">     <span class="keyword">int</span> Num=sc.nextInt();</span><br><span class="line">     System.<span class="keyword">out</span>.println(<span class="string">"请输入工时:"</span>);</span><br><span class="line">     <span class="keyword">double</span> X=sc.nextDouble();</span><br><span class="line">     f.S(X, N, Num, Type);</span><br><span class="line">     System.<span class="keyword">out</span>.println(N+奖金为<span class="string">"+f.getMoney());</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="类与类，类与接口，接口与接口之间的关系"><a href="#类与类，类与接口，接口与接口之间的关系" class="headerlink" title="类与类，类与接口，接口与接口之间的关系"></a>类与类，类与接口，接口与接口之间的关系</h2><ul><li>类与类之间，一个类只能继承一个类，但是类可以多层继承</li><li>类与接口则是实现关系，一个类可以继承一个接口，也可以继承多个接口，也可以继承一个类的同时实现多个接口</li><li>接口与接口之间是继承关系，一个接口可以继承另一个接口，也可以继承多个接口<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: mao.qitian</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2018/8/12 0012 0:22</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="class"><span class="keyword">interface</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">b</span><span class="params">()</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="class"><span class="keyword">interface</span> <span class="title">C</span> <span class="keyword">extends</span> <span class="title">B</span>,<span class="title">A</span></span>&#123; <span class="comment">//接口与接口之间继承，多继承</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">c</span><span class="params">()</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">D</span> <span class="keyword">implements</span> <span class="title">A</span>,<span class="title">B</span>,<span class="title">C</span></span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span> </span>&#123; &#125;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">b</span><span class="params">()</span> </span>&#123; &#125;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">c</span><span class="params">()</span> </span>&#123; &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="抽象类和接口的区别"><a href="#抽象类和接口的区别" class="headerlink" title="抽象类和接口的区别"></a>抽象类和接口的区别</h2><table><thead><tr><th>类</th><th>成员区别</th><th>继承关系区别</th><th>设计理念区别</th></tr></thead><tbody><tr><td>抽象类</td><td>成员变量可以是常量，也可以是变量，有构造方法，成员方法可以是抽象的也可以是非抽象的</td><td>单继承，多层继承</td><td>被继承的体现是“is a”的关系，抽象类中定义的是该继承体系的共性功能</td></tr><tr><td>接口</td><td>成员变量只能是常量，没有构造方法，成员方法只能是抽象的</td><td>实现，可以实现多个接口</td><td>被继承的体现是“like a”的关系，接口中定义的是该继承体现的扩展功能</td></tr></tbody></table><h2 id="最后说点"><a href="#最后说点" class="headerlink" title="最后说点"></a>最后说点</h2><ul><li><p>还是那句话，好记性不如烂笔头，通过这一篇文章，再次巩固了基础知识。如果文章中有写得不对的地方，请给我留言指出，大家一起学习进步。</p></li><li><p>参考资料:</p><ul><li>《Android进阶之光》</li><li>《Java编程思想》(第四版)</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;抽象(abstract)和接口(interface)在Java中都是关键字，也就说明他们足够重要，而抽象类和接口为我们面向对象编程提供了非常大的帮助。下面我们就一起来回顾这基础知识。&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java基础回顾" scheme="https://www.maoqitian.com/categories/Java%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE/"/>
    
    
      <category term="Java" scheme="https://www.maoqitian.com/tags/Java/"/>
    
      <category term="interface" scheme="https://www.maoqitian.com/tags/interface/"/>
    
      <category term="abstract" scheme="https://www.maoqitian.com/tags/abstract/"/>
    
      <category term="策略模式" scheme="https://www.maoqitian.com/tags/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins+Gitlab+Maven+Tomcat 持续集成，自动部署项目</title>
    <link href="https://www.maoqitian.com/2019/01/14/Jenkins%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    <id>https://www.maoqitian.com/2019/01/14/Jenkins持续集成/</id>
    <published>2019-01-14T07:55:49.000Z</published>
    <updated>2019-01-16T15:12:22.023Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/Jenkins.jpg" width="80%"></p><blockquote><p>持续集成：Continuous Integration，简称CI，意思是，在一个项目中，任何人对代码库的任何改动，都会触发CI服务器自动对项目进行构建，自动运行测试，甚至自动部署到测试环境。这样做的好处就是，随时发现问题，随时修复。因为修复问题的成本随着时间的推移而增长，越早发现，修复成本越低。当你想要更新你的项目，只要动手提交代码到你的代码仓库，剩余的更新部署操作就只管交由CI服务器来完成就好，这次使用的CI工具是JenKins。<br><a id="more"></a></p><ul><li>搭建Jenkins持续集成服务器可以分为两大步骤，一是在服务器安装好所需的软件，二是配置我们的持续集成项目<!--more--></li></ul></blockquote><h3 id="安装所需的各种软件"><a href="#安装所需的各种软件" class="headerlink" title="安装所需的各种软件"></a>安装所需的各种软件</h3><h4 id="安装启动-Jenkins"><a href="#安装启动-Jenkins" class="headerlink" title="安装启动 Jenkins"></a>安装启动 Jenkins</h4><ul><li>从Jenkins<a href="https://jenkins.io/" target="_blank" rel="noopener">官方网站</a>下载最新的rpm包<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">执行命令 rpm -ivh xxx.rpm  安装Jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动JenKins</span></span><br><span class="line"><span class="regexp">/etc/</span>init.d/jenkins start </span><br><span class="line"></span><br><span class="line">浏览器输入 <span class="string">http:</span><span class="comment">//xxx服务器地址:8080/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认端口号是8080</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/Jenkins%E5%90%AF%E5%8A%A81.png" alt="JenKins启动1"><br><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/JenKins%E5%90%AF%E5%8A%A8.png" alt="JenKins启动"></p><ul><li>JenKins默认端口号是8080，这与Tomcat默认端口号冲突，所有我们可以把Jenkins的端口号改成我们自己定义的端口号 9090<ul><li>修改端口号的文件为 /etc/sysconfig/jenkins，字段为JENKINS_PORT<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span>执行命令进行修改，如果碰到无法启动Jnekins,无法启动（如遇此Starting Jenkins bash: <span class="string">/usr/bin/java</span>: No such file or directory错误 ）修改 <span class="string">/etc/init.d/jenkins</span> 加入 <span class="string">/opt/jdk1.8.0_181/bin/java</span>原因</span><br><span class="line"><span class="string">//</span>是Java的环境变量没有找到，一般使用centos服务默认安装openjdk，如果自己卸载openJdk并重新安装sun的JDK,则也需要在该文件中加入路径，如图所示</span><br><span class="line"></span><br><span class="line">vim <span class="string">/etc/sysconfig/jenkins</span> </span><br><span class="line"></span><br><span class="line"><span class="string">//</span>添加Java地址</span><br><span class="line"></span><br><span class="line">vim <span class="string">/etc/init.d/jenkins</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E4%BF%AE%E6%94%B9Jenkins%E7%AB%AF%E5%8F%A3.png" alt="修改Jenkins端口"><br><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E6%B7%BB%E5%8A%A0Java%E5%9C%B0%E5%9D%80.png" alt="添加Java地址"></p><ul><li>修改端口无法启动的情况，有可能是服务器防火墙没有添加端口的监听，导致无法访问</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="meta-keyword">/etc/</span>sysconfig/iptables</span><br><span class="line">  </span><br><span class="line">查看是否监听端口(如果配置了自己定义的端口，需要先访问该端口一次才能看到监听)</span><br><span class="line">  </span><br><span class="line">netstat -ntlp</span><br><span class="line">  </span><br><span class="line"><span class="comment">//重启防火墙配置（不重启端口还是无法生效）</span></span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E6%B7%BB%E5%8A%A0%E6%96%B0%E7%9B%91%E5%90%AC%E7%9A%84%E7%AB%AF%E5%8F%A3.png" alt="添加新监听的端口"></p><h4 id="关闭Jenkins"><a href="#关闭Jenkins" class="headerlink" title="关闭Jenkins"></a>关闭Jenkins</h4><ul><li>只需要在访问jenkins服务器的网址url地址后加上exit。例如我jenkins的地址<a href="http://localhost:8080/，那么我只需要在浏览器地址栏上输入http://xxx:9090/exit" target="_blank" rel="noopener">http://localhost:8080/，那么我只需要在浏览器地址栏上输入http://xxx:9090/exit</a> 网址就能关闭jenkins服务.<h4 id="重启Jenkies"><a href="#重启Jenkies" class="headerlink" title="重启Jenkies"></a>重启Jenkies</h4></li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//xxx:8080 是搭建Jenkins服务器地址</span></span><br><span class="line"><span class="symbol">http:</span><span class="comment">//xxx:8080/restart</span></span><br></pre></td></tr></table></figure><ul><li><p>重新加载配置信息</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//localhost:8080/reload</span></span><br></pre></td></tr></table></figure></li><li><p>Jenkins的卸载</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>卸载软件：rpm -e jenkins</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>删除遗留文件: find / -iname jenkins | xargs -n 1000 rm -rf</span><br></pre></td></tr></table></figure></li></ul><h4 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h4><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">查看Java相关的包信息： </span><br><span class="line"> rpm -qa|grep java （或rpm -qa|grep jdk，rpm安装后，包名里没有Java）</span><br><span class="line">卸载 </span><br><span class="line">yum -y remove java [包名] </span><br><span class="line">例如 </span><br><span class="line">yum –y remove java java-<span class="number">1.8</span>.<span class="number">0</span>-openjdk-<span class="number">1.8</span>.<span class="number">0.131</span>-<span class="number">3</span>.b12.el7_3.x86_64 </span><br><span class="line"></span><br><span class="line">jdk 卸载方法 <span class="symbol">https:</span>/<span class="regexp">/blog.csdn.net/xyj</span>0808xyj/article/details/<span class="number">52444694</span></span><br><span class="line"></span><br><span class="line">/<span class="regexp">/解压到指定目录</span></span><br><span class="line"><span class="regexp">tar -zxvf jdk-8u181-linux-x64.tar.gz -C /opt</span><span class="regexp">/</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/编辑配置文件</span></span><br><span class="line"><span class="regexp">vim /etc</span><span class="regexp">/profile</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export JAVA_HOME=/opt</span><span class="regexp">/jdk1.8.0_181</span></span><br><span class="line"><span class="regexp">export PATH=$JAVA_HOME/bin</span>:$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/<span class="class"><span class="keyword">lib</span>:$<span class="title">JAVA_HOME</span>/<span class="title">jre</span>/<span class="title">lib</span>:$<span class="title">CLASSPATH</span> </span></span><br><span class="line">  </span><br><span class="line">/<span class="regexp">/更新配置文件</span></span><br><span class="line"><span class="regexp">source /etc</span><span class="regexp">/profile</span></span><br></pre></td></tr></table></figure><h4 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h4><ul><li>官网下载 <a href="https://tomcat.apache.org/download-80.cgi" target="_blank" rel="noopener">Tomcat8.5</a></li><li>直接解压到服务器（注意这里指的服务器是项目部署的服务器，应该是和部署JenKins的服务器不同） </li><li>强制关闭 tomcat 命令<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//强制关闭</span></span><br><span class="line">ps -ef<span class="string">|grep tomcat</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//杀掉无法关闭进程</span></span><br><span class="line">kill -<span class="number">9</span> XXXX</span><br></pre></td></tr></table></figure></li></ul><h4 id="安装-git-安装在部署JenKins服务器上"><a href="#安装-git-安装在部署JenKins服务器上" class="headerlink" title="安装 git (安装在部署JenKins服务器上)"></a>安装 git (安装在部署JenKins服务器上)</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">安装依赖</span><br><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel asciidoc</span><br><span class="line"></span><br><span class="line">yum install  gcc <span class="keyword">perl</span>-ExtUtils-MakeMaker</span><br><span class="line"></span><br><span class="line">如果已经安装了git,但是版本太老，可以先卸载</span><br><span class="line">yum <span class="built_in">remove</span> git </span><br><span class="line"></span><br><span class="line">下载git包解压</span><br><span class="line">tar -vxf git-<span class="number">2.15</span>.<span class="number">1</span>.tar.gz -C /<span class="keyword">opt</span></span><br><span class="line"></span><br><span class="line">进入git 目录</span><br><span class="line"><span class="keyword">cd</span> /<span class="keyword">opt</span>/git-<span class="number">2.18</span>.<span class="number">0</span>/</span><br><span class="line"></span><br><span class="line">执行以下命令</span><br><span class="line"></span><br><span class="line"><span class="keyword">make</span> prefix=/usr/local/git <span class="keyword">all</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">make</span> prefix=/usr/local/git install</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"export PATH=$PATH:/usr/local/git/bin"</span> &gt;&gt; /etc/<span class="keyword">profile</span>  //配置环境变量</span><br><span class="line"></span><br><span class="line"><span class="keyword">source</span> /etc/<span class="keyword">profile</span> //跟新配置文件</span><br><span class="line"></span><br><span class="line">git --<span class="keyword">version</span> 查看git版本</span><br></pre></td></tr></table></figure><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E5%AE%89%E8%A3%85git%E7%89%88%E6%9C%AC.png" alt="安装git版本"></p><h4 id="安装-maven-安装在部署JenKins服务器上"><a href="#安装-maven-安装在部署JenKins服务器上" class="headerlink" title="安装 maven(安装在部署JenKins服务器上)"></a>安装 maven(安装在部署JenKins服务器上)</h4><ul><li>后台项目为spring-boot搭建，需要安装maven</li><li>下载 <a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">maven 3.5.4</a><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">执行以下命令</span><br><span class="line">tar -zxvf apache-maven-3.3.9-bin.tar.gz -C /opt</span><br><span class="line"></span><br><span class="line">在/etc/profile文件末尾增加以下配置</span><br><span class="line"><span class="attribute">M2_HOME</span>=/opt/apache-maven-3.5.4 （注意这里是maven的安装路径）</span><br><span class="line"> <span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$&#123;M2_HOME&#125;</span>/bin:$&#123;PATH&#125;</span><br><span class="line"> </span><br><span class="line">重载/etc/profile这个文件</span><br><span class="line">  source /etc/profile</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/maven%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.png" alt="maven安装成功"></p><h4 id="GitLab服务器配置"><a href="#GitLab服务器配置" class="headerlink" title="GitLab服务器配置"></a>GitLab服务器配置</h4><ul><li>由于公司已经搭建好Gitlab服务器，所以我也没有配置过Gitlab，不过Gitlab配置网上已经有很多资料，可以自行百度。</li></ul><h3 id="Jenkins基础工具配置、新建项目配置"><a href="#Jenkins基础工具配置、新建项目配置" class="headerlink" title="Jenkins基础工具配置、新建项目配置"></a>Jenkins基础工具配置、新建项目配置</h3><h4 id="Jenkins配置"><a href="#Jenkins配置" class="headerlink" title="Jenkins配置"></a>Jenkins配置</h4><ul><li>第一次进入Jnekins,首先根据提示找到安装服务器的密码</li><li>如果服务器可以联网，则选择他推荐的插件直接安装，如果服务器无法连接外网，只是在公司内网环境，则可以离线下载插件再上传到我们服务器的Jenkin中，<a href="https://plugins.jenkins.io/" target="_blank" rel="noopener">离线插件下载地址</a>，这种方式需要耐心，因为需要安装的插件可不止一两个，如果你的服务器不能上网，我这有一份下载好的插件，可以自行去下载（<a href="https://github.com/maoqitian/MaoMdPhoto/tree/master/Jenkins%E6%8F%92%E4%BB%B6" target="_blank" rel="noopener">下载地址</a>）</li><li>在Jenkins系统管理模块的系统配置中配置我们的Gitlab,需要登录到Gitlab中获取APIToken<br><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AEGitLab.png" alt="系统配置GitLab"><br><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E8%8E%B7%E5%8F%96API%20Token.png" alt="获取API Token"><br><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/GitLab%20API%20Token%E9%85%8D%E7%BD%AE%20.png" alt="GitLab API Token配置 "><h4 id="生成ssh-key（在部署Jenkins服务器上生成）"><a href="#生成ssh-key（在部署Jenkins服务器上生成）" class="headerlink" title="生成ssh key（在部署Jenkins服务器上生成）"></a>生成ssh key（在部署Jenkins服务器上生成）</h4></li><li>配置SSH KEY ,用于后续项目可以通过Jenkins部署到应用服务器</li></ul><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span>输入命令，一路回车</span><br><span class="line">ssh-keygen -t rsa </span><br><span class="line">         </span><br><span class="line"><span class="string">//</span>现在你的私钥被放在了~<span class="string">/.ssh/id_rsa</span> 这个文件里，而公钥被放在了 ~<span class="string">/.ssh/id_rsa.pub</span> 这个文件里</span><br><span class="line">         </span><br><span class="line"><span class="string">//</span>可以将私钥配置到JneKins的系统设置中，配置框选项是需要Jenkins安装SSH插件的，如下图所示</span><br><span class="line">         </span><br><span class="line"><span class="string">//</span>公钥则配置到各个应用服务器的这个目录下<span class="string">/root/.ssh/authorized_keys</span>，没有authorized_keys则创建这个文件，如下图所示</span><br><span class="line">         </span><br><span class="line"><span class="string">//</span>最后测试应用服务器是否都能成功连接，如下图所示</span><br></pre></td></tr></table></figure><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/ssh%E7%A7%81%E9%92%A5%E9%85%8D%E7%BD%AE.png" alt="ssh私钥配置"><br><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E5%85%AC%E9%92%A5%E5%A4%8D%E5%88%B6%E5%88%B0%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8authorized_keys.png" alt="公钥复制到应用服务器authorized_keys"><br><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E6%B5%8B%E8%AF%95%E9%85%8D%E7%BD%AE%E5%85%AC%E9%92%A5%E7%9A%84%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%98%AF%E5%90%A6%E8%BF%9E%E6%8E%A5%E6%88%90%E5%8A%9F.png" alt="测试配置公钥的应用服务器是否连接成功"></p><h4 id="工具配置"><a href="#工具配置" class="headerlink" title="工具配置"></a>工具配置</h4><ul><li>接下来还是系统管理模块中的全局工具配置 Jenkins的 JDK、git和maven。前面我们已经把这些工具都给安装了，现在配置到Jenkins中，如下图所示</li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E9%85%8D%E7%BD%AEJenkins%20jdk%20git.png" alt="配置Jenkins jdk git"><br><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E9%85%8D%E7%BD%AEJenkins%20maven.png" alt="配置Jenkins maven"></p><h4 id="新建项目配置"><a href="#新建项目配置" class="headerlink" title="新建项目配置"></a>新建项目配置</h4><ul><li>新建一个maven项目（没有maven项目选项则需要下载对应插件）</li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E6%96%B0%E5%BB%BAmaven%E9%A1%B9%E7%9B%AE.png" alt="新建maven项目"></p><ul><li>首先配置源码管理，如图</li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE%E6%BA%90%E7%A0%81%E7%AE%A1%E7%90%86%E9%85%8D%E7%BD%AE.png" alt="新建项目源码管理配置"></p><ul><li>配置项目构建触发器（Gitlab Hook Plugin， Outbound WebHook for build events，Build Authorization Token Root， Success<br>Build Token Trigger插件）</li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E9%85%8D%E7%BD%AE%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E8%A7%A6%E5%8F%91%E5%99%A8.png" alt="配置项目构建触发器"></p><ul><li>配置maven项目编译</li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E9%85%8D%E7%BD%AEmaven%E9%A1%B9%E7%9B%AE%E7%BC%96%E8%AF%91.png" alt="配置maven项目编译"></p><ul><li>项目构建成功后部署应用服务器的配置 </li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E6%88%90%E5%8A%9F%E5%90%8E%E9%83%A8%E7%BD%B2%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E9%85%8D%E7%BD%AE.png" alt="项目构建成功后部署应用服务器的配置"></p><ul><li>Tomcat重启脚本(应当放在与Tomcat目录同路径下)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/sh</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'####################开始自动部署####################'</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/jdk1.8.0_181</span><br><span class="line">path=`<span class="built_in">pwd</span>` <span class="comment">#当前路径</span></span><br><span class="line">tomcatPath=/data/XXXX/tomcat_gxxmt_8080 <span class="comment">#指定tomcat文件目录名称</span></span><br><span class="line"><span class="built_in">cd</span> ../<span class="variable">$tomcatPath</span>/bin <span class="comment">#进入tomcat的bin目录</span></span><br><span class="line">PID=$(ps -fu `whoami`|grep tomcat|grep -v grep|awk <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$PID</span>"</span> ];<span class="keyword">then</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">"no tomcat process"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">./shutdown.sh <span class="comment">#停止tomcat服务</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> ../webapps <span class="comment">#进入tomcat的webapps目录</span></span><br><span class="line">rm -rf XXXX-api</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'####################删除完成####################'</span></span><br><span class="line"><span class="comment">#rm -fr gxxmt-api.war #删除test文件目录</span></span><br><span class="line"><span class="comment">#mv gxxmt-api.war gxxmt-api.war.$(date +%Y%m%d) #备份webapps下的test16 cp $path/test.war ./ #复制test.war到webapps路径下</span></span><br><span class="line"><span class="comment">#cd /var/lib/jenkins/workspace/gxxmt-api/gxxmt-api/target/</span></span><br><span class="line"><span class="comment">#cp gxxmt-api.war /data/gxxmt/tomcat_gxxmt_8080/webapps/</span></span><br><span class="line"><span class="built_in">cd</span> ../bin</span><br><span class="line">./startup.sh <span class="comment">#启动tomcat服务</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'####################部署结束####################'</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>项目构建成功并发布到了对应服务器执行对应脚本，这里就可以看到JenKins的灵活性，可以配置多台发布的应用服务器的多个Tomcat,灵活自动部署应用服务器配置</p></li><li><p>项目构建编译部署成功</p></li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E7%BC%96%E8%AF%91%E9%83%A8%E7%BD%B2%E6%88%90%E5%8A%9F.png" alt="项目构建编译部署成功"></p><h3 id="集成部署遇到的问题"><a href="#集成部署遇到的问题" class="headerlink" title="集成部署遇到的问题"></a>集成部署遇到的问题</h3><h4 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h4><ul><li>ERROR: Exception when publishing, exception message [Exec timed out or was interrupted after 120,000 ms]（执行脚本没有正常退出，导致部署超时）<br><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E9%94%99%E8%AF%AF1.png" alt="错误1"></li><li><p>解决：脚本执行加入忽略输入（nohup ….）</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nohup sh <span class="regexp">/data/</span>gxxmt-api/restart.sh</span><br><span class="line"><span class="comment">//当我们使用nohup命令的的时候，日志会被打印到nohup.out文件中去。</span></span><br><span class="line"><span class="comment">//如果我们不做任何处理，会随着每次的重新启动，nohup.out会越来越大</span></span><br><span class="line"><span class="comment">//。所以我在我执行的脚本中添加了</span></span><br><span class="line">cp <span class="regexp">/dev/</span><span class="literal">null</span> nohup.out</span><br></pre></td></tr></table></figure></li><li><p>在jenkins项目配置SSH Publishers勾选了Exec in pty，表示执行完脚本立即退出<br><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E9%94%99%E8%AF%AF1%E8%A7%A3%E5%86%B3%E5%8B%BE%E9%80%89Exec%20in%20pty.png" alt="错误1解决勾选Exec in pty"></p><h4 id="问题二，Jenkins目录迁移"><a href="#问题二，Jenkins目录迁移" class="headerlink" title="问题二，Jenkins目录迁移"></a>问题二，Jenkins目录迁移</h4></li><li>jenkins主目录迁移，jenkins默认主目录一般都是安装在系统盘，运行一段时间后项目部署的历史版本，日志文件，工作控件都会占用大量的系统空间，这样就会引发系统盘磁盘空间不足，首先我们可以修改jenkins主目录<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/<span class="regexp">/更改主目录</span></span><br><span class="line"><span class="regexp">vim /etc</span><span class="regexp">/sysconfig/jenkins</span></span><br><span class="line">JENKINS_HOME=<span class="string">"/data/jenkins"</span></span><br><span class="line"></span><br><span class="line">复制 /var/<span class="class"><span class="keyword">lib</span>/<span class="title">jenkins</span>/ 目录到 /<span class="title">data</span>目录下</span></span><br><span class="line"></span><br><span class="line">修改目录用户权限</span><br><span class="line"></span><br><span class="line">chown -R <span class="symbol">jenkins:</span>jenkins /data/jenkins</span><br><span class="line"></span><br><span class="line">重启 /etc/sysconfig/jenkins restart</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E4%B8%BB%E7%9B%AE%E5%BD%95%E4%BF%AE%E6%94%B9%E6%88%90%E5%8A%9F.png" alt="主目录修改成功"></p><ul><li>其次我们还可以在项目配置中设置丢弃历史构建</li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/%E8%AE%BE%E7%BD%AE%E4%B8%A2%E5%BC%83%E5%8E%86%E5%8F%B2%E6%9E%84%E5%BB%BA.png" alt="设置丢弃历史构建"></p><h4 id="问题三，代码提交触发构建"><a href="#问题三，代码提交触发构建" class="headerlink" title="问题三，代码提交触发构建"></a>问题三，代码提交触发构建</h4><ul><li>Url is blocked: Requests to the local network are not allowed Gitlab设置Jenkins的webhook地址无法设置</li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/WebHook%E5%9C%B0%E5%9D%80%E6%97%A0%E6%B3%95%E8%AE%BE%E7%BD%AE.png" alt="WebHook地址无法设置"></p><ul><li>升级新版Gitlab，要允许WebHook，需要在在Gitlab的Admin账户中，在settings标签下面，找到OutBound Request，勾选上Allow requests to the local network from hooks and services ，保存更改即可解决问题（如下图所示）</li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/Gitlab%20%E5%85%81%E8%AE%B8WebHook.png" alt="Gitlab 允许WebHook"></p><h4 id="问题四"><a href="#问题四" class="headerlink" title="问题四"></a>问题四</h4><ul><li>Gradle 编译Android 项目 /lib64/libc.so.6: version `GLIBC_2.14’ not found，系统是CentOS 6.9，最高支持glibc的版本为2.12，而研发程序要2.14版本，所以需要升级。<br>  <img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/glibc_2.14%E5%BA%93%E6%97%A0%E6%B3%95%E6%89%BE%E5%88%B0.png" alt="glibc_2.14库无法找到"><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span>查看系统版本</span><br><span class="line">cat <span class="string">/etc/redhat-release</span></span><br><span class="line"><span class="string">//</span>查看glibc库版本</span><br><span class="line">strings <span class="string">/lib64/libc.so.6</span> |grep GLIBC_</span><br><span class="line"><span class="string">//</span>下载glibc库 并安装</span><br><span class="line"><span class="comment">#下载</span></span><br><span class="line">wget http:<span class="string">//ftp.gnu.org/gnu/glibc/glibc-2.14.tar.gz</span> </span><br><span class="line">wget http:<span class="string">//ftp.gnu.org/gnu/glibc/glibc-ports-2.14.tar.gz</span> </span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">tar -xvf  glibc-2.14.tar.gz </span><br><span class="line">tar -xvf  glibc-ports-2.14.tar.gz</span><br><span class="line"><span class="comment">#创建相关目录</span></span><br><span class="line">mv glibc-ports-2.14 glibc-2.14/ports</span><br><span class="line">mkdir glibc-build-2.14</span><br><span class="line"><span class="keyword">cd</span> glibc-build-2.14/ </span><br><span class="line"></span><br><span class="line"><span class="comment">#生成C编译的环境</span></span><br><span class="line">yum -y install gcc</span><br><span class="line"></span><br><span class="line"><span class="comment">#编译C</span></span><br><span class="line"><span class="string">../glibc-2.14/configure</span>  <span class="params">--prefix=/usr</span> <span class="params">--disable-profile</span> <span class="params">--enable-add-ons</span> <span class="params">--with-headers=/usr/include</span> <span class="params">--with-binutils=/usr/bin</span></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装刚才编译好的 libc.so</span></span><br><span class="line">makeinstall </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看glibc库版本</span></span><br><span class="line">strings <span class="string">/lib64/libc.so.6</span> |grep GLIBC_</span><br></pre></td></tr></table></figure></li></ul><h3 id="最后说点"><a href="#最后说点" class="headerlink" title="最后说点"></a>最后说点</h3><ul><li><p>到此，我们的持续集成服务器已经搭建完成，这时候你只要动手提交一下代码到你前面构建触发器设置的分支（一般为主分支），剩余的项目构建，部署等一系列重复繁琐的工作就交由Jenkins帮我们自动完成就可以了，省时又方便。文章中如果有错误，请大家给我提出来，大家一起学习进步，如果觉得我的文章给予你帮助，也请给我一个喜欢或者关注。</p></li><li><p>参考链接:</p><ul><li><p><a href="https://blog.csdn.net/xiyatu123/article/details/53039749" target="_blank" rel="noopener">jenkins的安装与使用（基于 centos 7）</a></p></li><li><p><a href="https://www.jianshu.com/p/d4f2953f3ce0" target="_blank" rel="noopener">jenkins maven Spring Boot git Linux持续集成环境搭建教程</a></p></li><li><a href="https://blog.csdn.net/ouyang_peng/article/details/79974407" target="_blank" rel="noopener">解决SDK升级到27.0.3遇到的GLIBC_2.14 not found</a></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/maoqitian/MaoMdPhoto/raw/master/Jenkins/Jenkins.jpg&quot; width=&quot;80%&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;持续集成：Continuous Integration，简称CI，意思是，在一个项目中，任何人对代码库的任何改动，都会触发CI服务器自动对项目进行构建，自动运行测试，甚至自动部署到测试环境。这样做的好处就是，随时发现问题，随时修复。因为修复问题的成本随着时间的推移而增长，越早发现，修复成本越低。当你想要更新你的项目，只要动手提交代码到你的代码仓库，剩余的更新部署操作就只管交由CI服务器来完成就好，这次使用的CI工具是JenKins。&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="持续集成（CI）" scheme="https://www.maoqitian.com/categories/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%EF%BC%88CI%EF%BC%89/"/>
    
    
      <category term="Jenkins" scheme="https://www.maoqitian.com/tags/Jenkins/"/>
    
      <category term="git" scheme="https://www.maoqitian.com/tags/git/"/>
    
      <category term="GitLab" scheme="https://www.maoqitian.com/tags/GitLab/"/>
    
      <category term="CentOS" scheme="https://www.maoqitian.com/tags/CentOS/"/>
    
      <category term="Maven" scheme="https://www.maoqitian.com/tags/Maven/"/>
    
      <category term="Tomcat" scheme="https://www.maoqitian.com/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>FastDFS服务器集群部署和集成客户端到SpringBoot</title>
    <link href="https://www.maoqitian.com/2019/01/12/FastDFS%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2%E5%92%8C%E9%9B%86%E6%88%90%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%88%B0SpringBoot/"/>
    <id>https://www.maoqitian.com/2019/01/12/FastDFS服务器集群部署和集成客户端到SpringBoot/</id>
    <published>2019-01-12T08:33:11.000Z</published>
    <updated>2019-01-16T15:12:15.302Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题，同时也能做到在集群环境下一台机子上传文件，同时该组下的其他节点下也备份了上传的文件。做分布式系统开发时，其中要解决的一个问题就是图片、音视频、文件共享的问题和数据备份，分布式文件系统正好可以解决这个需求。FastDFS的服务主要有两个角色Tracker和Storage，Tracker服务用于负责调度storage节点与client通信，在访问上起负载均衡的作用，和记录storage节点的运行状态，是连接client和storage节点的枢纽，Storage用于保存文件</p></blockquote><h3 id="1-FastDFS集群部署"><a href="#1-FastDFS集群部署" class="headerlink" title="1.FastDFS集群部署"></a>1.FastDFS集群部署</h3><h4 id="整体部署模块图"><a href="#整体部署模块图" class="headerlink" title="整体部署模块图"></a>整体部署模块图</h4><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/FastDFS/FastDFS%E9%83%A8%E7%BD%B2%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="FastDFS部署示意图"></p><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>centos系统版本</td><td>6.9</td></tr><tr><td>libfatscommon</td><td>FastDFS分离出的一些公用函数包</td></tr><tr><td>FastDFS</td><td>FastDFS主程序</td></tr><tr><td>fastdfs-nginx-module</td><td>FastDFS和nginx的关联模块</td></tr><tr><td>nginx</td><td>nginx1.15.5</td></tr></tbody></table><h4 id="安装编译环境"><a href="#安装编译环境" class="headerlink" title="安装编译环境"></a>安装编译环境</h4><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git gcc gcc-c++ make automake autoconf libtool pcre pcre-devel <span class="literal">zlib</span> <span class="literal">zlib</span>-devel openssl-devel wget vim -y</span><br></pre></td></tr></table></figure><h4 id="磁盘安装路径说明"><a href="#磁盘安装路径说明" class="headerlink" title="磁盘安装路径说明"></a>磁盘安装路径说明</h4><table><thead><tr><th>说明</th><th>位置</th></tr></thead><tbody><tr><td>FastDFS所以安装包安装位置</td><td>/usr/local/src</td></tr><tr><td>tracker数据</td><td>/data/fdfs/tracker</td></tr><tr><td>Storage数据</td><td>/data/fdfs/Storage</td></tr><tr><td>配置文件路径</td><td>/etc/fdfs</td></tr></tbody></table><h4 id="安装libfatscommon"><a href="#安装libfatscommon" class="headerlink" title="安装libfatscommon"></a>安装libfatscommon</h4><ul><li><p><a href="https://github.com/happyfish100/libfastcommon" target="_blank" rel="noopener">下载libfatscommon</a></p></li><li><p>解压、安装</p></li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">unzip libfastcommon-master.zip</span><br><span class="line">cd libfastcommon-master</span><br><span class="line">./make<span class="selector-class">.sh</span> &amp;&amp; ./make<span class="selector-class">.sh</span> install #编译安装</span><br></pre></td></tr></table></figure><h4 id="安装FastDFS"><a href="#安装FastDFS" class="headerlink" title="安装FastDFS"></a>安装FastDFS</h4><ul><li><a href="https://github.com/happyfish100/fastdfs" target="_blank" rel="noopener">下载FastDFS</a></li><li>解压、安装</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">unzip fastdfs-master.zip</span><br><span class="line">cd fastdfs-master</span><br><span class="line">./make<span class="selector-class">.sh</span> &amp;&amp; ./make<span class="selector-class">.sh</span> install #编译安装</span><br><span class="line">cp /etc/fdfs/tracker<span class="selector-class">.conf</span><span class="selector-class">.sample</span> /etc/fdfs/tracker.conf</span><br><span class="line">cp /etc/fdfs/storage<span class="selector-class">.conf</span><span class="selector-class">.sample</span> /etc/fdfs/storage.conf</span><br><span class="line">cp /etc/fdfs/client<span class="selector-class">.conf</span><span class="selector-class">.sample</span> /etc/fdfs/client<span class="selector-class">.conf</span> #客户端文件，测试用</span><br><span class="line">cp /usr/local/src/fastdfs/conf/http<span class="selector-class">.conf</span> /etc/fdfs/ #供nginx访问使用</span><br><span class="line">cp /usr/local/src/fastdfs/conf/mime<span class="selector-class">.types</span> /etc/fdfs/ #供nginx访问使用</span><br></pre></td></tr></table></figure><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/FastDFS/etc%E7%9B%AE%E5%BD%95%E4%B8%8Bfdfs%E7%9B%AE%E5%BD%95.png" alt="etc目录下fdfs目录">    </p><h4 id="安装fastdfs-nginx-module"><a href="#安装fastdfs-nginx-module" class="headerlink" title="安装fastdfs-nginx-module"></a>安装fastdfs-nginx-module</h4><ul><li><a href="https://github.com/happyfish100/fastdfs-nginx-module" target="_blank" rel="noopener">下载fastdfs-nginx-module</a></li><li>解压、安装</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unzip fastdfs-nginx-module-master.zip</span><br><span class="line">cp <span class="regexp">/usr/</span>local<span class="regexp">/src/</span>fastdfs-nginx-module-master<span class="regexp">/src/m</span>od_fastdfs.conf <span class="regexp">/etc/</span>fdfs <span class="comment">#复制配置文件到fdfs目录</span></span><br></pre></td></tr></table></figure><h4 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h4><ul><li><a href="http://nginx.org/download/nginx-1.15.5.tar.gz" target="_blank" rel="noopener">下载nginx</a> </li><li>解压、安装</li></ul><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-<span class="number">1.15</span>.<span class="number">5</span>.tar.gz</span><br><span class="line">cd nginx-<span class="number">1.15</span>.<span class="number">5</span></span><br><span class="line"><span class="comment">#添加fastdfs-nginx-module模块</span></span><br><span class="line">./configure --add-<span class="keyword">module</span>=<span class="regexp">/usr/local</span><span class="regexp">/src/fastdfs</span>-nginx-<span class="keyword">module</span>-master/src/ </span><br><span class="line">make &amp;&amp; make install <span class="comment">#编译安装</span></span><br></pre></td></tr></table></figure><h4 id="FastDFS集群部署配置"><a href="#FastDFS集群部署配置" class="headerlink" title="FastDFS集群部署配置"></a>FastDFS集群部署配置</h4><ul><li><p>tracker配置</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务器ip为 xxx.xxx.78.12, xxx.xxx.78.13</span></span><br><span class="line">vim /etc/fdfs/tracker.conf</span><br><span class="line"><span class="comment">#需要修改的内容如下</span></span><br><span class="line">port=22122  <span class="comment"># tracker服务器端口（默认22122,一般不修改）</span></span><br><span class="line">base_path=/data/fdfs/tracker <span class="comment">#存储日志和数据的根目录</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/FastDFS/tracker%E9%85%8D%E7%BD%AE.png" alt="tracker配置"></p><ul><li>Storage配置</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fdfs/storage.conf</span><br><span class="line"><span class="comment">#需要修改的内容如下</span></span><br><span class="line">port=23000  <span class="comment"># storage服务端口（默认23000,一般不修改）</span></span><br><span class="line">base_path=/data/fdfs/storage  <span class="comment"># 数据和日志文件存储根目录</span></span><br><span class="line">store_path0=/data/fdfs/storage  <span class="comment"># 第一个存储目录</span></span><br><span class="line">tracker_server=xxx.xxx.78.12:22122  <span class="comment"># 服务器1</span></span><br><span class="line">tracker_server=xxx.xxx.78.13:22122  <span class="comment"># 服务器2</span></span><br><span class="line">http.server_port=8888  <span class="comment"># http访问文件的端口(默认8888,看情况修改,和nginx中保持一致)</span></span><br></pre></td></tr></table></figure><ul><li>client配置</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fdfs/client.conf</span><br><span class="line"><span class="comment">#需要修改的内容如下</span></span><br><span class="line">base_path=/home/moe/dfs</span><br><span class="line">tracker_server=xxx.xxx.78.12:22122  <span class="comment"># 服务器1</span></span><br><span class="line">tracker_server=xxx.xxx.78.13:22122  <span class="comment"># 服务器2</span></span><br></pre></td></tr></table></figure><ul><li>配置nginx访问<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fdfs/mod_fastdfs.conf</span><br><span class="line"><span class="comment">#需要修改的内容如下</span></span><br><span class="line"><span class="attribute">tracker_server</span>=xxx.xxx.78.12:22122  # 服务器1</span><br><span class="line"><span class="attribute">tracker_server</span>=xxx.xxx.78.13:22122  # 服务器2</span><br><span class="line"><span class="attribute">url_have_group_name</span>=<span class="literal">true</span></span><br><span class="line"><span class="attribute">store_path0</span>=/data/fdfs/storage</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置nginx.config</span></span><br><span class="line">vim /usr/local/nginx/conf/nginx.conf</span><br><span class="line"><span class="comment">#添加如下配置</span></span><br><span class="line">server &#123;</span><br><span class="line">listen       8888;    ## 该端口为storage.conf中的http.server_port相同</span><br><span class="line">server_name  localhost;</span><br><span class="line">location ~/group[0-9]/ &#123;</span><br><span class="line">   ngx_fastdfs_module;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br><span class="line"><span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br><span class="line">error_page   500 502 503 504  /50x.html;</span><br><span class="line">location = /50x.html &#123;</span><br><span class="line">root   html;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="启动服务、测试"><a href="#启动服务、测试" class="headerlink" title="启动服务、测试"></a>启动服务、测试</h4><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">启动之前我们还需要在防火墙开通端口</span><br><span class="line">vim  /etc/sysconfig/iptables</span><br><span class="line">-A INPUT -m <span class="keyword">state</span> --state NEW -m tcp -p tcp --dport <span class="number">22122</span> -j ACCEPT</span><br><span class="line">-A INPUT -m <span class="keyword">state</span> --state NEW -m tcp -p tcp --dport <span class="number">23000</span> -j ACCEPT</span><br><span class="line">-A INPUT -m <span class="keyword">state</span> --state NEW -m tcp -p tcp --dport <span class="number">8888</span> -j ACCEPT</span><br><span class="line"></span><br><span class="line">service iptables restart <span class="comment">#重启防火墙</span></span><br></pre></td></tr></table></figure><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/FastDFS/%E9%98%B2%E7%81%AB%E5%A2%99%E7%AB%AF%E5%8F%A3.png" alt="防火墙端口"></p><ul><li>每个服务的启动、关闭和重启操作<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#tracker</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/fdfs_trackerd start <span class="meta">#启动tracker服务</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/fdfs_trackerd restart <span class="meta">#重启动tracker服务</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/fdfs_trackerd stop <span class="meta">#停止tracker服务</span></span><br><span class="line">chkconfig fdfs_trackerd on <span class="meta">#自启动tracker服务</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#storage</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/fdfs_storaged start <span class="meta">#启动storage服务</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/fdfs_storaged restart <span class="meta">#重动storage服务</span></span><br><span class="line"><span class="meta-keyword">/etc/</span>init.d/fdfs_storaged stop <span class="meta">#停止动storage服务</span></span><br><span class="line">chkconfig fdfs_storaged on <span class="meta">#自启动storage服务</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#nginx</span></span><br><span class="line"><span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/nginx/</span>sbin/nginx <span class="meta">#启动nginx</span></span><br><span class="line"><span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/nginx/</span>sbin/nginx -s reload <span class="meta">#重启nginx</span></span><br><span class="line"><span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/nginx/</span>sbin/nginx -s stop <span class="meta">#停止nginx</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/FastDFS/%E6%9F%A5%E7%9C%8B%E8%BF%90%E8%A1%8C%E7%9A%84%E6%9C%8D%E5%8A%A1.png" alt="查看运行的服务"></p><h4 id="检测集群"><a href="#检测集群" class="headerlink" title="检测集群"></a>检测集群</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 会显示会有几台storage服务器,有2台就会显示 Storage 1-Storage 2的详细信息</span></span><br><span class="line"><span class="regexp">/usr/</span>bin<span class="regexp">/fdfs_monitor /</span>etc<span class="regexp">/fdfs/</span>storage.conf</span><br></pre></td></tr></table></figure><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/FastDFS/%E6%A3%80%E6%B5%8B%E9%9B%86%E7%BE%A41.png" alt="检测集群1"></p><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/FastDFS/%E6%A3%80%E6%B5%8B%E9%9B%86%E7%BE%A42.png" alt="检测集群2"></p><h4 id="图片上传测试"><a href="#图片上传测试" class="headerlink" title="图片上传测试"></a>图片上传测试</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#上传成功返回 文件访问 ID</span></span><br><span class="line"><span class="comment"># fdfs_upload_file 客户端配置文件      上传文件路径</span></span><br><span class="line">fdfs_upload_file <span class="regexp">/etc/</span>fdfs<span class="regexp">/client.conf /</span>data<span class="regexp">/test.png</span></span><br></pre></td></tr></table></figure><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/FastDFS/%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%88%90%E5%8A%9F.png" alt="上传文件成功"></p><h4 id="测试文件访问"><a href="#测试文件访问" class="headerlink" title="测试文件访问"></a>测试文件访问</h4><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//xxx.xxx.78.12/group1/M00/00/00/rB9ODFvXuSiAWBYBAALSAkm_6RQ360.png</span></span><br><span class="line"><span class="symbol">http:</span><span class="comment">//xxx.xxx.78.13/group1/M00/00/00/rB9ODFvXuSiAWBYBAALSAkm_6RQ360.png</span></span><br></pre></td></tr></table></figure><ul><li>测试nginx默认端口80 访问刚刚上传的文件，两个地址都能访问通一个文件，达到数据备份目的。</li></ul><blockquote><p>至此，FastDFS服务器部署完成    </p></blockquote><h3 id="FastDFS客户端集成到SpringBoot"><a href="#FastDFS客户端集成到SpringBoot" class="headerlink" title="FastDFS客户端集成到SpringBoot"></a>FastDFS客户端集成到SpringBoot</h3><h4 id="编译获取FastDFS-jar包"><a href="#编译获取FastDFS-jar包" class="headerlink" title="编译获取FastDFS jar包"></a>编译获取FastDFS jar包</h4><ul><li>首先根据官方源码提示，我们先下载源码使用maven编译成jar包放到公司maven私服（Nexus），或者你本地的maven私服（也有其他ant等方式，具体请查看github）<a href="https://github.com/happyfish100/fastdfs-client-java" target="_blank" rel="noopener">FastDFS-java-client-SDK源码下载地址</a><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#编译jar包（解压下载的FastDFS-java-client-SDK源码，使用<span class="keyword">mvn命令需要先有maven环境）</span></span><br><span class="line"><span class="keyword">mvn </span>clean install</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/FastDFS/%E7%BC%96%E8%AF%91%E6%89%93%E5%8C%85FastDFS-java-client.png" alt="编译打包FastDFS-java-client"></p><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/FastDFS/fastdfs-client-java%E6%89%93%E5%8C%85%E6%88%90%E5%8A%9F.png" alt="fastdfs-client-java打包成功"></p><h4 id="maven项目pom-xml中添加依赖"><a href="#maven项目pom-xml中添加依赖" class="headerlink" title="maven项目pom.xml中添加依赖"></a>maven项目pom.xml中添加依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.csource<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastdfs-client-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.27-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>接下来我们在项目resources目录下添加fdfs_client.conf文件</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">connect_timeout = 30</span><br><span class="line">network_timeout = 30</span><br><span class="line">charset = UTF-8</span><br><span class="line">http.tracker_http_port = 80</span><br><span class="line">http.anti_steal_token = no</span><br><span class="line">http.secret_key = 123456</span><br><span class="line"><span class="comment">#前面配置的集群tracker服务器地址</span></span><br><span class="line">tracker_server = xxx.xxx.78.12:22122</span><br><span class="line">tracker_server = xxx.xxx.78.13:22122</span><br></pre></td></tr></table></figure><h4 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h4><ul><li>写一个上传文件对象类</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @Author: maoqitian</span></span><br><span class="line"><span class="comment"> * @Date: 2018/10/26 0026 17:57</span></span><br><span class="line"><span class="comment"> * @Description: FastDFS 文件类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">public</span> class FastDFSFileEntity &#123;</span><br><span class="line"> <span class="comment">//文件名称</span></span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">String</span> name;</span><br><span class="line"> <span class="comment">//内容</span></span><br><span class="line"> <span class="keyword">private</span> <span class="built_in">byte</span>[] content;</span><br><span class="line"> <span class="comment">//文件类型</span></span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">String</span> ext;</span><br><span class="line"> <span class="comment">//md5值</span></span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">String</span> md5;</span><br><span class="line"> <span class="comment">//作者</span></span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">String</span> author;</span><br><span class="line"> <span class="keyword">public</span> FastDFSFileEntity(<span class="keyword">String</span> name, <span class="built_in">byte</span>[] content, <span class="keyword">String</span> ext, <span class="keyword">String</span> <span class="built_in">height</span>,</span><br><span class="line">                  <span class="keyword">String</span> <span class="built_in">width</span>, <span class="keyword">String</span> author) &#123;</span><br><span class="line">   <span class="keyword">super</span>();</span><br><span class="line">   <span class="keyword">this</span>.name = name;</span><br><span class="line">   <span class="keyword">this</span>.content = content;</span><br><span class="line">   <span class="keyword">this</span>.ext = ext;</span><br><span class="line">   <span class="keyword">this</span>.author = author;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> FastDFSFileEntity(<span class="keyword">String</span> name, <span class="built_in">byte</span>[] content, <span class="keyword">String</span> ext) &#123;</span><br><span class="line">   <span class="keyword">super</span>();</span><br><span class="line">   <span class="keyword">this</span>.name = name;</span><br><span class="line">   <span class="keyword">this</span>.content = content;</span><br><span class="line">   <span class="keyword">this</span>.ext = ext;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">String</span> getName() &#123;</span><br><span class="line">   <span class="keyword">return</span> name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> setName(<span class="keyword">String</span> name) &#123;</span><br><span class="line">   <span class="keyword">this</span>.name = name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">byte</span>[] getContent() &#123;</span><br><span class="line">   <span class="keyword">return</span> content;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> setContent(<span class="built_in">byte</span>[] content) &#123;</span><br><span class="line">   <span class="keyword">this</span>.content = content;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">String</span> getExt() &#123;</span><br><span class="line">   <span class="keyword">return</span> ext;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> setExt(<span class="keyword">String</span> ext) &#123;</span><br><span class="line">   <span class="keyword">this</span>.ext = ext;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">String</span> getMd5() &#123;</span><br><span class="line">   <span class="keyword">return</span> md5;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> setMd5(<span class="keyword">String</span> md5) &#123;</span><br><span class="line">   <span class="keyword">this</span>.md5 = md5;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">String</span> getAuthor() &#123;</span><br><span class="line">   <span class="keyword">return</span> author;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> setAuthor(<span class="keyword">String</span> author) &#123;</span><br><span class="line">   <span class="keyword">this</span>.author = author;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ul><li>编写FastDFS操作类，主要是加载初始化配置Tracker服务器，文件上传，下载，删除等操作工具类</li></ul><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: maoqitian</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2018/10/29 0029 9:30</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: FastDFS 操作类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FastDFSClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> org.slf4j.Logger logger = LoggerFactory.getLogger(FastDFSClient.class);</span><br><span class="line">  <span class="comment">//双重守护单例</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> FastDFSClient mInstance;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 加载配置信息</span></span><br><span class="line"><span class="comment">   **/</span></span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">       String filePath=<span class="keyword">new</span> ClassPathResource(<span class="string">"fdfs_client.conf"</span>).getFile().getAbsolutePath();</span><br><span class="line">       ClientGlobal.init(filePath);</span><br><span class="line">   &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">       logger.<span class="keyword">error</span>(<span class="string">"FastDFS Client Init Fail!"</span>,e);</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">FastDFSClient</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="function">FastDFSClient <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(mInstance == <span class="keyword">null</span>)&#123;</span><br><span class="line">      <span class="keyword">synchronized</span> (FastDFSClient.class)&#123;</span><br><span class="line">          <span class="keyword">if</span>(mInstance == <span class="keyword">null</span>)&#123;</span><br><span class="line">              mInstance=<span class="keyword">new</span> FastDFSClient();</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> mInstance;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@Author</span> maoqitian</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@Description</span> 上传文件</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@Date</span> 2018/10/29 0029 9:42</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@Param</span> [fastDFSFileEntity]</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> java.lang.String[]</span></span><br><span class="line"><span class="comment">   **/</span></span><br><span class="line">   <span class="keyword">public</span>  String[] upload(FastDFSFileEntity file)&#123;</span><br><span class="line">   logger.info(<span class="string">"File Name: "</span> + file.getName() + <span class="string">"File Length:"</span> + file.getContent().length);</span><br><span class="line"></span><br><span class="line">   NameValuePair[] metalist=<span class="keyword">new</span> NameValuePair[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">   metalist[<span class="number">0</span>]=<span class="keyword">new</span> NameValuePair(<span class="string">"author"</span>,file.getAuthor());</span><br><span class="line"></span><br><span class="line">   <span class="keyword">long</span> startTime = System.currentTimeMillis();</span><br><span class="line">   String[] uploadResults= <span class="keyword">null</span>;</span><br><span class="line">   StorageClient storageClient=<span class="keyword">null</span>;</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">       storageClient=getTrackerClient();</span><br><span class="line">       uploadResults = storageClient.upload_file(file.getContent(),file.getExt(),metalist);</span><br><span class="line">   &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">       logger.<span class="keyword">error</span>(<span class="string">"IO Exception when uploadind the file:"</span>+file.getName(),e);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">       logger.<span class="keyword">error</span>(<span class="string">"Non IO Exception when uploadind the file:"</span>+file.getName(),e);</span><br><span class="line">   &#125;</span><br><span class="line">   logger.info(<span class="string">"upload_file time used:"</span> + (System.currentTimeMillis() - startTime) + <span class="string">" ms"</span>);</span><br><span class="line">   <span class="keyword">if</span>(uploadResults==<span class="keyword">null</span> &amp;&amp; storageClient!=<span class="keyword">null</span>)&#123;</span><br><span class="line">       logger.<span class="keyword">error</span>(<span class="string">"upload file fail, error code:"</span> + storageClient.getErrorCode());</span><br><span class="line">   &#125;</span><br><span class="line">   String groupName = uploadResults[<span class="number">0</span>];</span><br><span class="line">   String remoteFileName = uploadResults[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">   logger.info(<span class="string">"upload file successfully!!!"</span> + <span class="string">"group_name:"</span> + groupName + <span class="string">", remoteFileName:"</span> + <span class="string">" "</span> + remoteFileName);</span><br><span class="line">   <span class="keyword">return</span> uploadResults;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span>  <span class="function">FileInfo <span class="title">getFile</span><span class="params">(String groupName, String remoteFileName)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">       StorageClient storageClient = getTrackerClient();</span><br><span class="line">       <span class="function"><span class="keyword">return</span> storageClient.<span class="title">get_file_info</span><span class="params">(groupName, remoteFileName)</span></span>;</span><br><span class="line">   &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">       logger.<span class="keyword">error</span>(<span class="string">"IO Exception: Get File from Fast DFS failed"</span>, e);</span><br><span class="line">   &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">       logger.<span class="keyword">error</span>(<span class="string">"Non IO Exception: Get File from Fast DFS failed"</span>, e);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span>  <span class="function">InputStream <span class="title">downFile</span><span class="params">(String groupName, String remoteFileName)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">       StorageClient storageClient = getTrackerClient();</span><br><span class="line">       <span class="keyword">byte</span>[] fileByte = storageClient.download_file(groupName, remoteFileName);</span><br><span class="line">       InputStream ins = <span class="keyword">new</span> ByteArrayInputStream(fileByte);</span><br><span class="line">       <span class="keyword">return</span> ins;</span><br><span class="line">   &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">       logger.<span class="keyword">error</span>(<span class="string">"IO Exception: Get File from Fast DFS failed"</span>, e);</span><br><span class="line">   &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">       logger.<span class="keyword">error</span>(<span class="string">"Non IO Exception: Get File from Fast DFS failed"</span>, e);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Author</span> maoqitian</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span></span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Date</span> 2018/10/31 0031 11:19</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Param</span> [remoteFileName]</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> int -1 失败 0成功</span></span><br><span class="line"><span class="comment">    **/</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">int</span> deleteFile(String remoteFileName)</span><br><span class="line">       <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">   StorageClient storageClient = getTrackerClient();</span><br><span class="line">   <span class="keyword">int</span> i = storageClient.delete_file(<span class="string">"group1"</span>, remoteFileName);</span><br><span class="line">   logger.info(<span class="string">"delete file successfully!!!"</span> + i);</span><br><span class="line">   <span class="keyword">return</span> i;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> StorageServer[] getStoreStorages(String groupName)</span><br><span class="line">       <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">   TrackerClient trackerClient = <span class="keyword">new</span> TrackerClient();</span><br><span class="line">   TrackerServer trackerServer = trackerClient.getConnection();</span><br><span class="line">   <span class="function"><span class="keyword">return</span> trackerClient.<span class="title">getStoreStorages</span><span class="params">(trackerServer, groupName)</span></span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ServerInfo[] getFetchStorages(String groupName,</span><br><span class="line">                                           String remoteFileName) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">   TrackerClient trackerClient = <span class="keyword">new</span> TrackerClient();</span><br><span class="line">   TrackerServer trackerServer = trackerClient.getConnection();</span><br><span class="line">   <span class="function"><span class="keyword">return</span> trackerClient.<span class="title">getFetchStorages</span><span class="params">(trackerServer, groupName, remoteFileName)</span></span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span>  <span class="function">String <span class="title">getTrackerUrl</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="string">"http://"</span>+getTrackerServer().getInetSocketAddress().getHostString()+<span class="string">":"</span>+ClientGlobal.getG_tracker_http_port()+<span class="string">"/"</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Author</span> maoqitian</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span> 获取 StorageClient</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Date</span> 2018/10/29 0029 10:33</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Param</span> []</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> org.csource.fastdfs.StorageClient</span></span><br><span class="line"><span class="comment">    **/</span></span><br><span class="line">   <span class="keyword">private</span> <span class="function">StorageClient <span class="title">getTrackerClient</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">   TrackerServer trackerServer=getTrackerServer();</span><br><span class="line">   StorageClient storageClient=<span class="keyword">new</span> StorageClient(trackerServer,<span class="keyword">null</span>);</span><br><span class="line">   <span class="keyword">return</span> storageClient;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Author</span> maoqitian</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Description</span> 获取 TrackerServer</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Date</span> 2018/10/29 0029 10:34</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@Param</span> []</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> org.csource.fastdfs.TrackerServer</span></span><br><span class="line"><span class="comment">    **/</span></span><br><span class="line">   <span class="keyword">private</span>  <span class="function">TrackerServer <span class="title">getTrackerServer</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">   TrackerClient trackerClient=<span class="keyword">new</span> TrackerClient();</span><br><span class="line">   TrackerServer trackerServer = trackerClient.getConnection();</span><br><span class="line">   <span class="keyword">return</span> trackerServer;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ul><li>Controller编写，接收请求并上传文件返回文件访问路径（这里写一个文件上传的例子，其他文件下载，删除等功能可根据自己需求进行编写）<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span> maoqitian</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>  上传文件</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Date</span> 2018/10/30 0030 15:07</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Param</span> [file]</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> com.gxxmt.common.utils.ResultApi</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"> <span class="meta">@RequestMapping</span>(<span class="string">"/upload"</span>)</span><br><span class="line"> <span class="keyword">public</span> ResultApi upload(<span class="meta">@RequestParam</span>(<span class="string">"file"</span>) MultipartFile file) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="keyword">if</span> (file.isEmpty()) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RRException(<span class="string">"上传文件不能为空"</span>);</span><br><span class="line">&#125;</span><br><span class="line">String url;</span><br><span class="line"><span class="comment">//此处域名获取可以根据自需求编写</span></span><br><span class="line">String domainUrl = OSSFactory.build().getDomainPath();</span><br><span class="line">logger.info(<span class="string">"配置的域名为"</span>+domainUrl);</span><br><span class="line"><span class="keyword">if</span> (StringUtils.isNotBlank(domainUrl))&#123;</span><br><span class="line">url = uploadFile(file,domainUrl);</span><br><span class="line"><span class="keyword">return</span> ResultApi.success.put(<span class="string">"url"</span>,url);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="function"><span class="keyword">return</span> ResultApi.<span class="title">error</span><span class="params">(<span class="string">"域名配置为空,请先配置对象存储域名"</span>)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@Author</span> maoqitian</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@Description</span> 上传文件到 FastDFS</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@Date</span> 2018/10/29 0029 11:11</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@Param</span> [file]</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Param</span> [domainName] 域名</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> path 文件访问路径</span></span><br><span class="line"><span class="comment">   **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function">String <span class="title">uploadFile</span><span class="params">(MultipartFile file,String domainName)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">String[] fileAbsolutePath=&#123;&#125;;</span><br><span class="line">String fileName=file.getOriginalFilename();</span><br><span class="line">String ext=fileName.substring(fileName.lastIndexOf(<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">byte</span>[] file_buff=<span class="keyword">null</span>;</span><br><span class="line">InputStream inputStream = file.getInputStream();</span><br><span class="line"><span class="keyword">if</span>(inputStream!=<span class="keyword">null</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> available = inputStream.available();</span><br><span class="line">file_buff=<span class="keyword">new</span> <span class="keyword">byte</span>[available];</span><br><span class="line">inputStream.read(file_buff);</span><br><span class="line">&#125;</span><br><span class="line">inputStream.close();</span><br><span class="line">FastDFSFileEntity fastDFSFileEntity=<span class="keyword">new</span> FastDFSFileEntity(fileName,file_buff,ext);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">fileAbsolutePath=FastDFSClient.getInstance().upload(fastDFSFileEntity);</span><br><span class="line">logger.info(fileAbsolutePath.toString());</span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">logger.<span class="keyword">error</span>(<span class="string">"upload file Exception!"</span>,e);</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RRException(<span class="string">"文件上传出错"</span>+e);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(fileAbsolutePath == <span class="keyword">null</span>)&#123;</span><br><span class="line">logger.<span class="keyword">error</span>(<span class="string">"upload file failed,please upload again!"</span>);</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RRException(<span class="string">"文件上传失败，请重新上传"</span>);</span><br><span class="line">&#125;</span><br><span class="line">String path=domainName+fileAbsolutePath[<span class="number">0</span>]+ <span class="string">"/"</span>+fileAbsolutePath[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> path;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="测试部署成果"><a href="#测试部署成果" class="headerlink" title="测试部署成果"></a>测试部署成果</h4><ul><li>上传一个图片，由日志打印我们可以看出图片已经上传成功 </li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/FastDFS/FastDFS-java-client%20%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E6%88%90%E5%8A%9F.png" alt="FastDFS-java-client 上传图片成功"></p><ul><li>测试访问上传的图片</li></ul><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/FastDFS/%E6%B5%8B%E8%AF%95%E4%B8%8A%E4%BC%A0%E7%9A%84%E5%9B%BE%E7%89%87%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E8%BF%9B%E8%A1%8C%E8%AE%BF%E9%97%AE.png" alt="测试上传的图片是否可以进行访问"></p><h3 id="最后说点"><a href="#最后说点" class="headerlink" title="最后说点"></a>最后说点</h3><ul><li>到此，FastDFS服务器集群部署和集成客户端到SpringBoot中已经完成，以后我们就可以愉快的使用FastDFS服务保存我们的图片等并备份。如果文章中有写得不对的地方，请给我留言指出，大家一起学习进步。如果觉得我的文章给予你帮助，也请给我一个喜欢和关注。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题，同时也能做到在集群环境下一台机子上传文件，同时该组下的其他节点下也备份了上传的文件。
      
    
    </summary>
    
      <category term="后端" scheme="https://www.maoqitian.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Java" scheme="https://www.maoqitian.com/tags/Java/"/>
    
      <category term="CentOS" scheme="https://www.maoqitian.com/tags/CentOS/"/>
    
      <category term="Maven" scheme="https://www.maoqitian.com/tags/Maven/"/>
    
      <category term="FastDFS" scheme="https://www.maoqitian.com/tags/FastDFS/"/>
    
      <category term="spring boot" scheme="https://www.maoqitian.com/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码编译</title>
    <link href="https://www.maoqitian.com/2019/01/10/Android-source-code-compilation/"/>
    <id>https://www.maoqitian.com/2019/01/10/Android-source-code-compilation/</id>
    <published>2019-01-10T12:23:03.000Z</published>
    <updated>2019-01-14T08:08:30.978Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>android源码编译的四个流程:1.源码下载;2.构建编译环境;3.编译源码;4运行.</p></blockquote><h2 id="Ubuntu-18-04（虚拟机）环境下编译Android-源码"><a href="#Ubuntu-18-04（虚拟机）环境下编译Android-源码" class="headerlink" title="Ubuntu 18.04（虚拟机）环境下编译Android 源码"></a>Ubuntu 18.04（虚拟机）环境下编译Android 源码</h2><h3 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h3><ul><li><p>首先确保自己已经安装了Git.</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install git </span><br><span class="line">git<span class="built_in"> config </span>–global user.email “test@test.com” </span><br><span class="line">git<span class="built_in"> config </span>–global user.name “test”</span><br></pre></td></tr></table></figure></li><li><p>使用清华大学镜像</p><ul><li><a href="https://mirror.tuna.tsinghua.edu.cn/help/AOSP/" target="_blank" rel="noopener">Android 镜像使用帮助</a></li><li>首先要下载repo 工具</li></ul><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~<span class="regexp">/bin</span></span><br><span class="line"><span class="regexp">PATH=~/bin</span>:$PATH</span><br><span class="line">curl <span class="symbol">https:</span>/<span class="regexp">/storage.googleapis.com/git</span>-repo-downloads/repo &gt; ~<span class="regexp">/bin/repo</span></span><br><span class="line">chmod a+x ~<span class="regexp">/bin/repo</span></span><br><span class="line">/<span class="regexp">/拒绝连接可以使用tuna的git-repo镜像</span></span><br><span class="line"><span class="regexp">详情查看网址https:/</span><span class="regexp">/mirrors.tuna.tsinghua.edu.cn/help</span><span class="regexp">/git-repo/</span></span><br></pre></td></tr></table></figure><ul><li>使用每月更新的初始化包</li><li><p>下载地址 <a href="https://mirrors.tuna.tsinghua.edu.cn/aosp-monthly/aosp-latest.tar" target="_blank" rel="noopener">每月更新的初始化包</a></p></li><li><p>由于所有代码都是从隐藏的 .repo 目录中 checkout 出来的，所以只保留了 .repo 目录，下载后解压 再 repo sync 一遍即可得到完整的目录</p></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">使用方法如下:</span><br><span class="line"></span><br><span class="line">wget -c https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/aosp-mo nthly/</span>aosp-latest.tar <span class="comment"># 下载初始化包</span></span><br><span class="line">tar xf aosp-latest.tar</span><br><span class="line">cd AOSP   <span class="comment"># 解压得到的 AOSP 工程目录</span></span><br><span class="line"><span class="comment"># 这时 ls 的话什么也看不到，因为只有一个隐藏的 .repo 目录</span></span><br><span class="line">repo sync <span class="comment"># 正常同步一遍即可得到完整目录</span></span><br><span class="line"><span class="comment"># 或 repo sync -l 仅checkout代码</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="构建编译环境"><a href="#构建编译环境" class="headerlink" title="构建编译环境"></a>构建编译环境</h3><h4 id="硬件要求"><a href="#硬件要求" class="headerlink" title="硬件要求:"></a>硬件要求:</h4><ul><li>64位的操作系统只能编译2.3.x以上的版本,如果你想要编译2.3.x以下的,那么需要32位的操作系统.<br>  磁盘空间越多越好,至少在100GB以上.意思就是,你可以去买个大点的硬盘了啊<br>  如果你想要在是在虚拟机运行linux,那么至少需要16GB的RAM/swap. </li></ul><h4 id="软件要求"><a href="#软件要求" class="headerlink" title="软件要求"></a>软件要求</h4><ul><li>安装 openJDK 8   <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> update</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install openjdk-8-jdk</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>依赖设置:</p>   <figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install libx11-<span class="built_in">dev</span>:i386 libreadline6-<span class="built_in">dev</span>:i386 libgl1-mesa-<span class="built_in">dev</span> g++-multilib </span><br><span class="line">sudo apt-<span class="built_in">get</span> install -y git flex bison gperf build-essential libncurses5-<span class="built_in">dev</span>:i386 </span><br><span class="line">sudo apt-<span class="built_in">get</span> install tofrodos python-markdown libxml2-utils xsltproc zlib1g-<span class="built_in">dev</span>:i386 </span><br><span class="line">sudo apt-<span class="built_in">get</span> install dpkg-<span class="built_in">dev</span> libsdl1<span class="number">.2</span>-<span class="built_in">dev</span> libesd0-<span class="built_in">dev</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install git-core gnupg flex bison gperf build-essential  </span><br><span class="line">sudo apt-<span class="built_in">get</span> install zip curl zlib1g-<span class="built_in">dev</span> gcc-multilib g++-multilib </span><br><span class="line">sudo apt-<span class="built_in">get</span> install libc6-<span class="built_in">dev</span>-i386 </span><br><span class="line">sudo apt-<span class="built_in">get</span> install lib32ncurses5-<span class="built_in">dev</span> x11proto-core-<span class="built_in">dev</span> libx11-<span class="built_in">dev</span> </span><br><span class="line">sudo apt-<span class="built_in">get</span> install libgl1-mesa-<span class="built_in">dev</span> libxml2-utils xsltproc unzip m4</span><br><span class="line">sudo apt-<span class="built_in">get</span> install lib32z-<span class="built_in">dev</span> ccache</span><br></pre></td></tr></table></figure></li><li><p>依赖设置中有可能会出现“无法定位软件包 libesd0-dev” 这个问题</p>   <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">解决方案：</span><br><span class="line">在etc/apt   的sources.<span class="keyword">list</span> 添加镜像源   <span class="keyword">deb</span> http://archive.ubuntu.<span class="keyword">com</span>/ubuntu/ trusty main universe restricted multiverse</span><br><span class="line"></span><br><span class="line">然后 sudo apt-<span class="built_in">get</span> <span class="keyword">update</span>  接着继续使用该命令安装就可以了</span><br></pre></td></tr></table></figure></li><li><p>操作系统要求 </p><p>  Android版本 | 编译要求的Ubuntu最低版本<br>  —|—<br>  Android 6.0至AOSP master | Ubuntu 14.04<br>  Android 2.3.x至Android 5.x | Ubuntu 12.04<br>  Android 1.5至Android 2.2.x | Ubuntu 10.04</p></li><li><p>JDK版本要求</p></li></ul><table><thead><tr><th>Android版本</th><th>编译要求的JDK版本</th></tr></thead><tbody><tr><td>AOSP的Android主线</td><td>OpenJDK 8</td></tr><tr><td>Android 5.x至android 6.0</td><td>Oracle JDK 7</td></tr><tr><td>Android 2.3.x至Android 4.4.x</td><td>Oracle JDK 6</td></tr><tr><td>Android 1.5至Android 2.2.x</td><td>Oracle JDK 5</td></tr></tbody></table><ul><li><p>官方编译环境搭建文档地址</p><p><a href="https://source.android.com/source/initializing#installing-required-packages-ubuntu-1404" target="_blank" rel="noopener">搭建编译环境</a></p></li></ul><h3 id="初始化编译环境"><a href="#初始化编译环境" class="headerlink" title="初始化编译环境"></a>初始化编译环境</h3>   <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">source</span> build/envsetup.<span class="keyword">sh</span> </span><br><span class="line">或者</span><br><span class="line">. build/envsetup.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><ul><li><p>选择目标</p> <figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">. </span>lunch aosp<span class="emphasis">_arm64-eng</span></span><br></pre></td></tr></table></figure></li><li><p>该命令表示针对模拟器进行完整编译，并且所有调试功能均处于启用状态。<br> 如果您没有提供任何参数就运行命令，lunch 将提示您从菜单中选择一个目标。<br> 所有编译目标都采用 BUILD-BUILDTYPE 形式，其中 BUILD 是表示特定功能组合的代号。</p></li><li><p>BUILDTYPE 是以下类型之一：</p><pre><code>编译类型 | 使用情况---|---user | 权限受限；适用于生产环境（没有root权和dedug等）userdebug |在user版本的基础上开放了root权限和debug权限.eng | 开发工程师的版本,拥有最大的权限,此外还附带了许多debug工具</code></pre></li></ul><h3 id="编译源码"><a href="#编译源码" class="headerlink" title="编译源码"></a>编译源码</h3><ul><li><p>您可以使用make编译任何代码。GNUMake可以借助 -jN参数处理并行任务，通常使用的任务数N介于编译时所用计算机上硬件线程数的1-2倍之间。例如，在一台双核 E5520 计算机（2 个 CPU，每个 CPU 4 个内核，每个内核2个线程）上，要实现最快的编译速度，可以使用介于make -j16 到 make -j32 之间的命令。</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span> -j8</span><br></pre></td></tr></table></figure></li><li><p>编译中<br>  <img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Android%20%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/Android%E6%BA%90%E7%A0%81%E7%AD%89%E5%BE%85%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B.png" alt="Android源码等待编译过程"></p></li></ul><h3 id="编译完成"><a href="#编译完成" class="headerlink" title="编译完成"></a>编译完成</h3><p>  <img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Android%20%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91%E5%AE%8C%E6%88%90.png" alt="编译完成"></p><ul><li><p>运行模拟器</p>   <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//依次输入以下命令（如果是在编译成功源码之后直接想运行模拟器，则直接输入emulator命令就行，因为前面编译源码已经输入过以上两条命令）</span></span><br><span class="line"></span><br><span class="line">. build/envsetup.sh</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">lunch</span><span class="params">(选择刚才你编译源码设置的目标版本)</span></span></span><br><span class="line"></span><br><span class="line">emulator</span><br></pre></td></tr></table></figure><p>   <img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Android%20%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/%E8%BF%90%E8%A1%8C%E6%A8%A1%E6%8B%9F%E5%99%A8.png" alt="运行模拟器"></p></li></ul><h3 id="将源码导入Android-Studio-查看"><a href="#将源码导入Android-Studio-查看" class="headerlink" title="将源码导入Android Studio 查看"></a>将源码导入Android Studio 查看</h3><ul><li><p>编译idegen</p>  <figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source build<span class="regexp">/envsetup.sh /</span>/ 将执行文件设置为临时变量</span><br><span class="line">mmm development<span class="regexp">/tools/idegen/</span>  <span class="regexp">//</span>生成idegen.jar文件（<span class="comment">#### build completed successfully (49 seconds) ###</span><span class="comment"># 标识生成idegen.jar文件）</span></span><br></pre></td></tr></table></figure></li><li><p>执行脚本 idegen.sh</p>  <figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">. </span>development/tools/idegen/idegen.sh</span><br></pre></td></tr></table></figure><p>  看到下图，表示编译idegen完成，执行成功后在asop的根目录下生成android.ipr和android.iml两个个文件：</p><ul><li>android.ipr 一般保存了工程相关的设置，比如modules和modules libraries的路径，编译器配置，入口点等。</li><li><p>android.iml 用来描述modules。它包括modules路径、 依赖关系，顺序设置等。一个项目可以包含多个 *.iml 文件。</p><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Android%20%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/%E7%BC%96%E8%AF%91idegen.png" alt="编译idegen"></p></li><li><p>打开Android studio，点击File&gt;Open，选择刚刚生成的android.ipr导入就可以了，依据个人机子性能问题，导入时间有快有慢。</p></li></ul></li></ul><h3 id="编译中遇到的坑"><a href="#编译中遇到的坑" class="headerlink" title="编译中遇到的坑"></a>编译中遇到的坑</h3><ul><li><p>Error: library-pathout/host/linux-x86/lib64/libsepolwrap.so does not exist</p><p><img src="https://github.com/maoqitian/MaoMdPhoto/raw/master/Android%20%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/Android%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%A4%B1%E8%B4%A51.png" alt="Android源码编译失败1"> </p></li><li><p>解决 ： </p><blockquote><p>1.重新同步代码 并加入sudo apt-get install dpkg-dev libsdl1.2-dev libesd0-dev<br>2.确认是否配置好了JDK的环境变量 </p></blockquote></li><li><p>openJDK 配置环境变量方法</p>  <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.用gedit文本编辑器在/etc/profile中添加环境变量：</span><br><span class="line">命令 ： sudo gedit /etc/profile</span><br><span class="line"></span><br><span class="line">2.在打开的/etc/profile文件末尾添加下面几行：</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/lib/jvm/java-8-openjdk-amd64</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">JRE_HOME</span>=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CLASSPATH</span>=.:$&#123;JAVA_HOME&#125;/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib </span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:$PATH</span><br></pre></td></tr></table></figure></li></ul><h3 id="最后说点"><a href="#最后说点" class="headerlink" title="最后说点"></a>最后说点</h3><ul><li><p>到此，Android源码编译完成，源码编译是一个需要耐心的过程，希望看到文章的你也可以编译成功。文章中如果有错误，请大家给我提出来，大家一起学习进步，如果觉得我的文章给予你帮助，也请给我一个喜欢或者关注。    </p></li><li><p>参考资料</p><p><a href="https://source.android.com/source/initializing#optimizing-a-build-environment" target="_blank" rel="noopener">搭建编译环境</a></p><p><a href="https://blog.csdn.net/mcryeasy/article/details/60466837" target="_blank" rel="noopener">动手实现Android源码（AOSP）的下载、编译、运行、导入、调试</a></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/" target="_blank" rel="noopener">Android 镜像使用帮助</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;android源码编译的四个流程:1.源码下载;2.构建编译环境;3.编译源码;4运行.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Ubuntu-18-04（虚拟机）环境下编译Android-源码&quot;&gt;&lt;a href=&quot;#Ubuntu-18
      
    
    </summary>
    
      <category term="Android进阶" scheme="https://www.maoqitian.com/categories/Android%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Android" scheme="https://www.maoqitian.com/tags/Android/"/>
    
      <category term="源码编译" scheme="https://www.maoqitian.com/tags/%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/"/>
    
  </entry>
  
</feed>
